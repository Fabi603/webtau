[{"type":"Page","content":[{"title":"Finders","id":"finders","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Finders in webtau is the initial web element selection that could select one or more elements.","type":"SimpleText"}]}]},{"title":"By CSS","id":"by-css","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"$","type":"InlinedCode"},{"text":" to select an element by a given ","type":"SimpleText"},{"code":"css","type":"InlinedCode"},{"text":" selector.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def welcomeMessage \u003d $(\u0027#welcome\u0027)\nwelcomeMessage.should \u003d\u003d \u0027hello\u0027","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If more than one element is matched, the first one will be used for actions and assertions.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def menu \u003d $(\u0027ul li a\u0027)\nmenu.should \u003d\u003d \u0027book\u0027","type":"Snippet"},{"type":"Paragraph","content":[{"text":"While ","type":"SimpleText"},{"code":"click","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"sendKeys","type":"InlinedCode"},{"text":" will always work on a first element only, the matchers can work with a list of things.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def menu \u003d $(\u0027ul li a\u0027)\nmenu.should \u003d\u003d [\u0027book\u0027, \u0027orders\u0027, \u0027help\u0027]","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: declaring element this way will not trigger element search right away.","type":"SimpleText"}]},{"paths":["div.div[0]","div.div[1].ul.li[0].a"],"meta":{"rightSide":true},"xmlAsJson":{"tagName":"div","attributes":[],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"welcome\""}],"children":[{"tagName":"","text":"hello"}]},{"tagName":"div","attributes":[{"name":"id","value":"\"menu\""}],"children":[{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/book\""}],"children":[{"tagName":"","text":"book"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/orders\""}],"children":[{"tagName":"","text":"orders"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/help\""}],"children":[{"tagName":"","text":"help"}]}]}]}]}]},"type":"Xml"}]},{"title":"Filters","id":"filters","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use filters to narrow down elements selected by finders like ","type":"SimpleText"},{"code":"css","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Filter comes in a way of ","type":"SimpleText"},{"code":"get","type":"InlinedCode"},{"text":" method. Parameter is one of the following","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element number","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element text","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element regexp","type":"SimpleText"}]}]}]},{"lang":"groovy","snippet":"def ordersMenu \u003d $(\u0027ul li a\u0027).get(2)\nordersMenu.should \u003d\u003d \u0027orders\u0027","title":"Number","type":"Snippet"},{"lang":"groovy","snippet":"def ordersMenu \u003d $(\u0027ul li a\u0027).get(\u0027orders\u0027)\nordersMenu.should \u003d\u003d \u0027orders\u0027","title":"Text","type":"Snippet"},{"lang":"groovy","snippet":"def ordersMenu \u003d $(\u0027ul li a\u0027).get(~/ord/)\nordersMenu.should \u003d\u003d \u0027orders\u0027","title":"Regexp","type":"Snippet"},{"paths":["div.div[1].ul.li[1].a"],"meta":{"rightSide":true},"xmlAsJson":{"tagName":"div","attributes":[],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"welcome\""}],"children":[{"tagName":"","text":"hello"}]},{"tagName":"div","attributes":[{"name":"id","value":"\"menu\""}],"children":[{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/book\""}],"children":[{"tagName":"","text":"book"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/orders\""}],"children":[{"tagName":"","text":"orders"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/help\""}],"children":[{"tagName":"","text":"help"}]}]}]}]}]},"type":"Xml"}]},{"title":"Chaining","id":"chaining","type":"Section","content":[{"type":"Paragraph","content":[{"text":"After you filtered, you can use finders again to find nested elements.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def ordersMenu \u003d $(\u0027ul li\u0027).get(2).find(\u0027a\u0027)\nordersMenu.should \u003d\u003d \u0027orders\u0027","title":"Nested css selector","type":"Snippet"},{"paths":["div.div[1].ul.li[1].a"],"meta":{"rightSide":true},"xmlAsJson":{"tagName":"div","attributes":[],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"welcome\""}],"children":[{"tagName":"","text":"hello"}]},{"tagName":"div","attributes":[{"name":"id","value":"\"menu\""}],"children":[{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/book\""}],"children":[{"tagName":"","text":"book"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/orders\""}],"children":[{"tagName":"","text":"orders"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/help\""}],"children":[{"tagName":"","text":"help"}]}]}]}]}]},"type":"Xml"}]}],"lastModifiedTime":1544199631000,"tocItem":{"sectionTitle":"UI","pageTitle":"Finders And Filters","pageMeta":{"type":["two-sides"]},"fileName":"finders-and-filters","dirName":"UI","pageSectionIdTitles":[{"title":"Finders","id":"finders"},{"title":"By CSS","id":"by-css"},{"title":"Filters","id":"filters"},{"title":"Chaining","id":"chaining"}]}},{"type":"Page","content":[{"title":"Open","id":"open","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To open a page use ","type":"SimpleText"},{"code":"browser.open","type":"InlinedCode"},{"text":". Browser will load a page only if the current url doesn\u0027t match the passed one.","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit(\u0027query\u0027)\n\nbrowser.open(\"/search\") // page is not be ing refreshed\nsearch.searchMessage.should \u003d\u003d \u0027searching for query\u0027","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: relative url will be automatically expanded to the full url based on the ","type":"SimpleText"},{"url":"/webtau/guide/UI/basic-configuration","isFile":false,"type":"Link","content":[{"text":"configuration","type":"SimpleText"}]}]}]},{"title":"Reopen","id":"reopen","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"brower.reopen","type":"InlinedCode"},{"text":" to force open the page even if the page url already matches the passed one.","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit(\u0027name\u0027)\n\nbrowser.reopen(\"/search\") // page is going to be refreshed\nsearch.searchMessage.should \u003d\u003d \u0027\u0027","commentsType":"inline","type":"Snippet"}]},{"title":"Refresh","id":"refresh","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.refresh","type":"InlinedCode"},{"text":" to refresh current page.","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit(\u0027name\u0027)\n\nbrowser.reopen(\"/search\") // page is going to be refreshed\nsearch.searchMessage.should \u003d\u003d \u0027\u0027","commentsType":"inline","type":"Snippet"}]},{"title":"Restart","id":"restart","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.restart","type":"InlinedCode"},{"text":" to restart a browser and open last opened url.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.open(\u0027/local-storage\u0027)\nbrowser.localStorage.setItem(\u0027favoriteColor\u0027, \u0027pretty\u0027)\n\nbrowser.refresh()\n$(\u0027#favorite-color\u0027).should \u003d\u003d \u0027pretty\u0027\n\nbrowser.restart()\n$(\u0027#favorite-color\u0027).should \u003d\u003d \u0027\u0027","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: restarting creates a clean instance of a browser. Local storage is going to be reset.","type":"SimpleText"}]}]},{"title":"Assert URL","id":"assert-url","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.url","type":"InlinedCode"},{"text":" to assert on or wait for url changes.","type":"SimpleText"}]},{"lang":"txt","snippet":"http://example.com/resource/id?type\u003dfull\u0026debug\u003dtrue#subId","title":"sample url","type":"Snippet"},{"lang":"groovy","snippet":"browser.url.path.should \u003d\u003d \u0027/resource/id\u0027\nbrowser.url.query.should \u003d\u003d \u0027type\u003dfull\u0026debug\u003dtrue\u0027\nbrowser.url.ref.should \u003d\u003d \u0027subId\u0027","title":"asserting url parts","entry":"should expose url parts with should","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"browser.url.should \u003d\u003d \u0027http://example.com/resource/id?type\u003dfull\u0026debug\u003dtrue#subId\u0027","title":"asserting full url","entry":"full part should be optional and default during assertion","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"browser.url.path.waitTo \u003d\u003d \u0027/resource/id\u0027\nbrowser.url.query.waitTo \u003d\u003d \u0027type\u003dfull\u0026debug\u003dtrue\u0027\nbrowser.url.ref.waitTo \u003d\u003d \u0027subId\u0027","title":"waiting on url parts","entry":"should expose url parts with wait","bodyOnly":true,"type":"Snippet"}]},{"title":"Persist URL","id":"persist-url","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.saveCurrentUrl","type":"InlinedCode"},{"text":" to save url in a local cache and ","type":"SimpleText"},{"code":"browser.openSavedUrl","type":"InlinedCode"},{"text":" to open a page later.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"It can be handy in multipart tests where first part creates an entity and the second part","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"updates the created entity.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.open(\u0027/resource-creation\u0027)\n\n$(\u0027#new\u0027).click()\nbrowser.saveCurrentUrl()","type":"Snippet"},{"type":"Paragraph","content":[{"text":"In order to simplify tests development of a second part you can run first part once, save URL,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and iterate on a second part by opening a page using saved URL.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.openSavedUrl()\n// continue resource related manipulations","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: url is stored in a local cache file and will survive tests restart.","type":"SimpleText"}]}]}],"lastModifiedTime":1546614417000,"tocItem":{"sectionTitle":"UI","pageTitle":"Navigation","pageMeta":{},"fileName":"navigation","dirName":"UI","pageSectionIdTitles":[{"title":"Open","id":"open"},{"title":"Reopen","id":"reopen"},{"title":"Refresh","id":"refresh"},{"title":"Restart","id":"restart"},{"title":"Assert URL","id":"assert-url"},{"title":"Persist URL","id":"persist-url"}]}},{"type":"Page","content":[{"title":"Special Values","id":"special-values","type":"Section","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    price.should \u003d\u003d 100\n    assert price instanceof DataNode\n}","entry":"use groovy closure as validation","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Values that you access inside validation block are special values of ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" type. When you assert them using ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" statement","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"they act as proxies that record every assertion that you do.","type":"SimpleText"}]}]},{"title":"Extracting Values","id":"extracting-values","type":"Section","content":[{"type":"Paragraph","content":[{"text":"As you have seen in ","type":"SimpleText"},{"url":"/webtau/guide/REST/CRUD","isFile":false,"type":"Link","content":[{"text":"CRUD example","type":"SimpleText"}]},{"text":" you can return values back from a validation block.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def id \u003d http.get(\"/end-point\") {\n    return id\n}\n\nassert id \u003d\u003d 10\nassert id.getClass() \u003d\u003d Integer","entry":"can return simple value from get","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"When you return a value from a validation block, it automatically gets converted to its correspondent primitive.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: asserting that value after returning will not track and associated assertions with the call anymore. Use it only","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to get values required for consequent test calls.","type":"SimpleText"}]}]},{"title":"Properties On Lists","id":"properties-on-lists","type":"Section","content":[{"data":{"id":10,"price":100,"amount":30,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":30},{"id":"id2","k1":"v11","k2":40}]},"paths":[],"type":"Json"},{"type":"Paragraph","content":[{"text":"If you have a list of objects like ","type":"SimpleText"},{"code":"complexList","type":"InlinedCode"},{"text":" above, you can access all its children property value with ","type":"SimpleText"},{"code":"complexList.k2","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    complexList.k2.should \u003d\u003d [30, 40]\n}","entry":"groovy children key shortcut","bodyOnly":true,"type":"Snippet"}]},{"title":"Find","id":"find","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Special values inside assertion block have convenient methods","type":"SimpleText"}]},{"type":"Paragraph","content":[{"code":"find","type":"InlinedCode"},{"text":" to find a single value","type":"SimpleText"}]},{"lang":"groovy","snippet":"def found \u003d http.get(\"/end-point\") {\n    return list.find { it \u003e 1 }\n}\n\nassert found \u003d\u003d 2\nassert found.getClass() \u003d\u003d Integer","entry":"groovy find on list","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"and ","type":"SimpleText"},{"code":"findAll","type":"InlinedCode"},{"text":" to find all the values matching predicate","type":"SimpleText"}]},{"lang":"groovy","snippet":"def found \u003d http.get(\"/end-point\") {\n    return list.findAll { it \u003e 1 }\n}\n\nassert found \u003d\u003d [2, 3]\nassert found[0].getClass() \u003d\u003d Integer","entry":"groovy findAll on list","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: While values inside a predicate are normal values, the result of ","type":"SimpleText"},{"code":"find","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"findAll","type":"InlinedCode"},{"text":" is still ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"}]},{"lang":"groovy","snippet":"def id \u003d http.get(\"/end-point\") {\n    def found \u003d complexList.find {\n        assert k1.getClass() \u003d\u003d String\n        k1 \u003d\u003d \u0027v1\u0027\n    }\n    assert found.getClass() \u003d\u003d GroovyDataNode\n\n    return found.id\n}\n\nassert id.getClass() \u003d\u003d String","entry":"groovy find on list of objects","bodyOnly":true,"type":"Snippet"}]},{"title":"Collect","id":"collect","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"collect","type":"InlinedCode"},{"text":" to transform a collection of items","type":"SimpleText"}]},{"lang":"groovy","snippet":"def transformed \u003d http.get(\"/end-point\") {\n    return list.collect { \"world#${it}\" }\n}\n\nassert transformed \u003d\u003d [\u0027world#1\u0027, \u0027world#2\u0027, \u0027world#3\u0027]\nassert transformed[0] instanceof GString","entry":"groovy transform list","bodyOnly":true,"type":"Snippet"}]},{"title":"Combine","id":"combine","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Methods ","type":"SimpleText"},{"code":"find","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"collect","type":"InlinedCode"},{"text":" can be chained","type":"SimpleText"}]},{"lang":"groovy","snippet":"def sum \u003d http.get(\"/end-point\") {\n    return complexList\n            .findAll { k1.startsWith(\u0027v1\u0027) }\n            .collect { k2 }\n            .sum()\n}\n\nassert sum \u003d\u003d 70","entry":"groovy findAll, collect, and sum","bodyOnly":true,"type":"Snippet"}]}],"lastModifiedTime":1539782115000,"tocItem":{"sectionTitle":"REST","pageTitle":"Data Node","pageMeta":{},"fileName":"data-node","dirName":"REST","pageSectionIdTitles":[{"title":"Special Values","id":"special-values"},{"title":"Extracting Values","id":"extracting-values"},{"title":"Properties On Lists","id":"properties-on-lists"},{"title":"Find","id":"find"},{"title":"Collect","id":"collect"},{"title":"Combine","id":"combine"}]}},{"type":"Page","content":[{"title":"Universal Set Value","id":"universal-set-value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"setValue","type":"InlinedCode"},{"text":" on a declared page element to set its value.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It will work on all the standard input types out of the box.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Define all the input fields inside a page object. In combination with universal ","type":"SimpleText"},{"code":"setValue","type":"InlinedCode"},{"text":" it will make your tests robust.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Given a html snippet","type":"SimpleText"}]},{"lang":"html","snippet":"\u003chtml\u003e\n\u003cbody\u003e\n\u003cdiv id\u003d\"form\"\u003e\n    \u003cinput id\u003d\"name\"/\u003e\n    \u003cinput id\u003d\"startDate\" type\u003d\"date\"/\u003e\n    \u003cselect id\u003d\"rank\"\u003e\n        \u003coption/\u003e\n        \u003coption value\u003d\"A\"\u003eA\u003c/option\u003e\n        \u003coption value\u003d\"B\"\u003eB\u003c/option\u003e\n        \u003coption value\u003d\"C\"\u003eC\u003c/option\u003e\n        \u003coption value\u003d\"D\"\u003eD\u003c/option\u003e\n        \u003coption value\u003d\"E\"\u003eE\u003c/option\u003e\n    \u003c/select\u003e\n\u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e","title":"HTML form","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Page object can be defined as","type":"SimpleText"}]},{"lang":"groovy","snippet":"package pages\n\nimport static com.twosigma.webtau.WebTauDsl.*\n\nclass FormPage {\n    def name \u003d $(\u0027#name\u0027)\n    def rank \u003d $(\u0027#rank\u0027)\n    def startDate \u003d $(\u0027#startDate\u0027)\n}","title":"Form page object","type":"Snippet"}]},{"title":"Default Input","id":"default-input","type":"Section","content":[{"lang":"groovy","snippet":"form.name.setValue(\u0027Full Automation\u0027)","title":"set value to input","type":"Snippet"}]},{"title":"Date Input","id":"date-input","type":"Section","content":[{"lang":"groovy","snippet":"form.startDate.setValue(\u002706/21/2016\u0027)","title":"set value to date input","type":"Snippet"}]},{"title":"Select","id":"select","type":"Section","content":[{"lang":"groovy","snippet":"form.rank.setValue(\u0027B\u0027)","title":"set value to select","type":"Snippet"}]},{"title":"Universal Assert","id":"universal-assert","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Form element value can be asserted the same way as any regular element.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Underlying value will be extracted based on the element type","type":"SimpleText"}]},{"lang":"groovy","snippet":"form.name.should \u003d\u003d \u0027Full Automation\u0027\nform.rank.should \u003d\u003d \u0027B\u0027\nform.startDate.should \u003d\u003d \u00272016-06-21\u0027","title":"universal assert","type":"Snippet"}]},{"title":"Custom Form Elements","id":"custom-form-elements","type":"Section","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of universal ","type":"SimpleText"},{"code":"set","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"assert","type":"InlinedCode"},{"text":" is that your test is focused on the data and not implementation details.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"But what if you decided to use a custom component to enter the data?","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To hide implementation details from your test you should define a custom input handler for your UI component.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let\u0027s consider a form component that you can start interacting with only after you clicked it. And after the value","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"is entered, the input box disappears again.","type":"SimpleText"}]},{"lang":"html","snippet":"\u003cdiv id\u003d\"answer\" class\u003d\"special-selector\" onclick\u003d\"activate(\u0027answer\u0027)\"\u003e \n \u003cdiv class\u003d\"current-value\"\u003e\n   current value \n \u003c/div\u003e \n \u003cinput class\u003d\"value-input\" value\u003d\"\" onblur\u003d\"valueEntered(\u0027answer\u0027)\"\u003e \n\u003c/div\u003e","title":"Custom input","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Our test should still be written in terms of data entering and validation.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def customFormElement \u003d $(\u0027#answer\u0027)\n\ncustomFormElement.setValue(\u0027hello\u0027)\ncustomFormElement.should \u003d\u003d \u0027hello\u0027","title":"set value to custom component","type":"Snippet"},{"type":"Paragraph","content":[{"text":"In order to achieve this we need to register a custom handler.","type":"SimpleText"}]},{"lang":"groovy","snippet":"import formHandlers.CustomInput\n\nurl \u003d \"http://localhost:8180\"\n\npageElementGetSetValueHandlers \u003d [CustomInput]","title":"webtau.cfg","type":"Snippet"},{"lang":"groovy","snippet":"package formHandlers\n\nimport com.twosigma.webtau.browser.page.HtmlNode\nimport com.twosigma.webtau.browser.page.PageElement\nimport com.twosigma.webtau.browser.page.PageElementStepExecutor\nimport com.twosigma.webtau.browser.page.value.handlers.PageElementGetSetValueHandler\nimport com.twosigma.webtau.reporter.TokenizedMessage\n\nclass CustomInput implements PageElementGetSetValueHandler {\n    @Override\n    boolean handles(HtmlNode htmlNode, PageElement pageElement) {\n        return htmlNode.attributes.class \u003d~ /special-selector/\n    }\n\n    @Override\n    void setValue(PageElementStepExecutor stepExecutor,\n                  TokenizedMessage pathDescription,\n                  HtmlNode htmlNode,\n                  PageElement pageElement,\n                  Object value) {\n        pageElement.click()\n        pageElement.find(\u0027input\u0027).sendKeys(\"${value}\\t\")\n    }\n\n    @Override\n    String getValue(HtmlNode htmlNode, PageElement pageElement) {\n        return pageElement.find(\u0027.current-value\u0027).getUnderlyingValue()\n    }\n}","title":"Custom input handler","type":"Snippet"}]}],"lastModifiedTime":1545331750000,"tocItem":{"sectionTitle":"UI","pageTitle":"Forms","pageMeta":{},"fileName":"forms","dirName":"UI","pageSectionIdTitles":[{"title":"Universal Set Value","id":"universal-set-value"},{"title":"Default Input","id":"default-input"},{"title":"Date Input","id":"date-input"},{"title":"Select","id":"select"},{"title":"Universal Assert","id":"universal-assert"},{"title":"Custom Form Elements","id":"custom-form-elements"}]}},{"type":"Page","content":[{"title":"WebTau Runner","id":"webtau-runner","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use webtau ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":" methods as in a junit test, but to enable reporting you need to use","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"@RunWith(WebTauRunner.class)","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package com.example.tests.junit4\n\nimport com.twosigma.webtau.junit4.WebTauRunner\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\nimport static com.twosigma.webtau.WebTauDsl.*\n\n@RunWith(WebTauRunner.class)\nclass CustomerCrudSingleGroovyTest {\n    private def customerPayload \u003d [firstName: \u0027FN\u0027,\n                                   lastName: \u0027LN\u0027]\n    private def changedCustomerPayload \u003d [*:customerPayload, lastName: \u0027NLN\u0027]\n\n    @Test\n    void crud() {\n        def id \u003d http.post(\"/customers\", customerPayload) {\n            return id\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should \u003d\u003d customerPayload\n        }\n\n        http.put(\"/customers/$id\", changedCustomerPayload) {\n            body.should \u003d\u003d changedCustomerPayload\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should \u003d\u003d changedCustomerPayload\n        }\n\n        http.delete(\"/customers/$id\") {\n            statusCode.should \u003d\u003d 204\n        }\n\n        http.get(\"/customers/$id\") {\n            statusCode.should \u003d\u003d 404\n        }\n    }\n}","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit4;\n\nimport com.twosigma.webtau.junit4.WebTauRunner;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport java.util.Map;\n\nimport static com.twosigma.webtau.Ddjt.aMapOf;\nimport static com.twosigma.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class CustomerCrudSingleJavaTest {\n    private Map\u003cString, Object\u003e customerPayload \u003d createCustomerPayload();\n    private Map\u003cString, Object\u003e changedCustomerPayload \u003d createChangedCustomerPayload();\n\n    @BeforeClass\n    public static void setUpClass() {\n        String port \u003d System.getProperty(\"springboot.http.port\", \"8080\");\n        getCfg().setBaseUrl(\"http://localhost:\" + port);\n    }\n\n    @Test\n    public void crud() {\n        int id \u003d http.post(\"/customers\", customerPayload, ((header, body) -\u003e {\n            return body.get(\"id\");\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -\u003e {\n            body.should(equal(customerPayload));\n        }));\n\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -\u003e {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -\u003e {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.delete(\"/customers/\" + id, ((header, body) -\u003e {\n            header.statusCode().should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -\u003e {\n            header.statusCode().should(equal(404));\n        }));\n    }\n\n    private Map\u003cString, Object\u003e createCustomerPayload() {\n        return aMapOf(\n                \"firstName\", \"FN\",\n                \"lastName\", \"LN\");\n    }\n\n    private Map\u003cString, Object\u003e createChangedCustomerPayload() {\n        Map\u003cString, Object\u003e payload \u003d createCustomerPayload();\n        payload.put(\"lastName\", \"NLN\");\n\n        return payload;\n    }\n}","type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Maven Import","id":"maven-import","type":"Section","content":[{"lang":"xml","snippet":"\u003cdependency\u003e\n    \u003cgroupId\u003ecom.twosigma.webtau\u003c/groupId\u003e\n    \u003cartifactId\u003ewebtau-junit4\u003c/artifactId\u003e\n    \u003cversion\u003e1.4\u003c/version\u003e\n\u003c/dependency\u003e","type":"Snippet"}]}],"lastModifiedTime":1541166954000,"tocItem":{"sectionTitle":"Generic Runners","pageTitle":"JUnit 4","pageMeta":{},"fileName":"JUnit-4","dirName":"generic-runners","pageSectionIdTitles":[{"title":"WebTau Runner","id":"webtau-runner"},{"title":"Maven Import","id":"maven-import"}]}},{"type":"Page","content":[{"title":"Select","id":"select","type":"Section","content":[{"lang":"cfg","snippet":"waitTimeout \u003d 2500\nurl \u003d http://my-server\n\nenvironments {\n   dev {\n       url \u003d \"http://localhost:8080\"\n   }\n}\n","lineNumber":"","title":"webtau.cfg","type":"Snippet"},{"command":"webtau --env\u003ddev","paramsToHighlight":[],"type":"CliCommand"}]}],"lastModifiedTime":1526573459000,"tocItem":{"sectionTitle":"Configuration","pageTitle":"Environments","pageMeta":{},"fileName":"environments","dirName":"configuration","pageSectionIdTitles":[{"title":"Select","id":"select"}]}},{"type":"Page","content":[{"title":"Installation","id":"installation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Download and unzip ","type":"SimpleText"},{"url":"https://repo.maven.apache.org/maven2/com/twosigma/webtau/webtau-dist/1.4/webtau-dist-1.4-webtau.zip","isFile":false,"type":"Link","content":[{"text":"webtau","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Add it to your ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"title":"Bare Minimum","id":"bare-minimum","type":"Section","content":[{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"simple get\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe \u003c 100\n    }\n}","title":"examples/scenarios/rest/simpleGet.groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To run test, navigate to ","type":"SimpleText"},{"code":"examples","type":"InlinedCode"},{"text":" dir and","type":"SimpleText"}]},{"command":"webtau scenarios/rest/simpleGet.groovy --url\u003dhttps://my-server","paramsToHighlight":["url"],"type":"CliCommand"},{"type":"Paragraph","content":[{"text":"Note: using ","type":"SimpleText"},{"code":"package","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"import","type":"InlinedCode"},{"text":" is optional and is mainly for IDE auto completion. Imports will be added implicitly","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"during command line run.","type":"SimpleText"}]}]},{"title":"Config File","id":"config-file","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Url parameter can be moved to a ","type":"SimpleText"},{"code":"webtau.cfg","type":"InlinedCode"},{"text":" file.","type":"SimpleText"}]},{"lang":"cfg","snippet":"url \u003d \"http://localhost:8180\"","title":"examples/scenarios/rest/webtau.cfg","type":"Snippet"},{"type":"Paragraph","content":[{"url":"/webtau/guide/configuration/environments","isFile":false,"type":"Link","content":[{"text":"Specify multiple environments","type":"SimpleText"}]},{"text":" to streamline test execution.","type":"SimpleText"}]}]}],"lastModifiedTime":1534849042000,"tocItem":{"sectionTitle":"REST","pageTitle":"Getting Started","pageMeta":{},"fileName":"getting-started","dirName":"REST","pageSectionIdTitles":[{"title":"Installation","id":"installation"},{"title":"Bare Minimum","id":"bare-minimum"},{"title":"Config File","id":"config-file"}]}},{"type":"Page","content":[{"title":"Location","id":"location","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default report is generated at ","type":"SimpleText"},{"code":"\u003cworkingdir\u003e/webtau.report.html","type":"InlinedCode"},{"text":". To change the location use ","type":"SimpleText"},{"code":"--reportPath","type":"InlinedCode"},{"text":" option.","type":"SimpleText"}]}]},{"title":"Summary","id":"summary","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Out of the box report provides high level information like number of failed tests and HTTP Operations coverage.","type":"SimpleText"}]},{"fit":true,"imageSrc":"/webtau/guide/img/rest-report-summary.png","timestamp":1546829938569,"shapes":[],"width":2134.0,"height":1192.0,"type":"AnnotatedImage"}]},{"title":"Navigation","id":"navigation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Report is a self contained single page application.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Url tracks your navigation through screens, so you can share url with your teammates to narrow down a problem.","type":"SimpleText"}]}]},{"title":"Additional Reports","id":"additional-reports","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To generate custom reports, or upload report data to your server, specify ","type":"SimpleText"},{"code":"reportGenerator","type":"InlinedCode"},{"text":" config property.","type":"SimpleText"}]},{"lang":"cfg","snippet":"import scenarios.rest.report.Report\n\nurl \u003d \"http://localhost:8080\"\n\nreportGenerator \u003d Report.\u0026generateReport","title":"webtau.cfg","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Report.\u0026generateReport","type":"InlinedCode"},{"text":" is implemented as following","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.report\n\nimport com.twosigma.webtau.console.ConsoleOutputs\nimport com.twosigma.webtau.console.ansi.Color\nimport com.twosigma.webtau.report.ReportTestEntries\n\nimport static com.twosigma.webtau.WebTauDsl.cfg\n\nclass Report {\n    static void generateReport(ReportTestEntries entries) {\n        def reportPath \u003d cfg.workingDir.resolve(\u0027report.txt\u0027)\n\n        ConsoleOutputs.out(\u0027generating report: \u0027, Color.PURPLE, reportPath)\n        reportPath.toFile().text \u003d entries.size()\n    }\n}","title":"scenarios/rest/report/Report.groovy","type":"Snippet"}]}],"lastModifiedTime":1533120126000,"tocItem":{"sectionTitle":"REST","pageTitle":"Report","pageMeta":{},"fileName":"report","dirName":"REST","pageSectionIdTitles":[{"title":"Location","id":"location"},{"title":"Summary","id":"summary"},{"title":"Navigation","id":"navigation"},{"title":"Additional Reports","id":"additional-reports"}]}},{"type":"Page","content":[{"title":"Timeouts","id":"timeouts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Default timeout in milliseconds for ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitToNot","type":"InlinedCode"}]},{"columns":[{"content":[{"lang":"","snippet":"waitTimeout \u003d 25000\n","lineNumber":"","type":"Snippet"}]},{"content":[{"lang":"","snippet":"--waitTimeout\u003d25000\n","lineNumber":"","type":"Snippet"}]}],"config":{},"type":"Columns"}]},{"title":"Window Size","id":"window-size","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Browser window size can be set using ","type":"SimpleText"},{"code":"windowWidth","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"windowHeight","type":"InlinedCode"}]},{"lang":"groovy","snippet":"url \u003d \"http://localhost:8180\"\n\nwindowWidth \u003d 1280\nwindowHeight \u003d 800","type":"Snippet"}]},{"title":"Documentation Artifacts","id":"documentation-artifacts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default all generated documentation artifacts (e.g. screenshots) are created in the current directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To override","type":"SimpleText"}]},{"lang":"groovy","snippet":"url \u003d \"http://localhost:8180\"\n\ndocPath \u003d \"screenshots\"","type":"Snippet"}]}],"lastModifiedTime":1533554070000,"tocItem":{"sectionTitle":"UI","pageTitle":"Advanced Configuration","pageMeta":{},"fileName":"advanced-configuration","dirName":"UI","pageSectionIdTitles":[{"title":"Timeouts","id":"timeouts"},{"title":"Window Size","id":"window-size"},{"title":"Documentation Artifacts","id":"documentation-artifacts"}]}},{"type":"Page","content":[{"title":"Test Encapsulation","id":"test-encapsulation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Robust tests should not depend on implementation details.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"UI has plenty of those:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"UI Elements placement","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Actions","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"UI test should not depend on any of them.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Move elements placement and available actions outside of UI test.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Multiple tests can then reuse that information.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And more importantly you will have only one place to change if UI changes.","type":"SimpleText"}]}]},{"title":"Definition","id":"definition","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To define ","type":"SimpleText"},{"code":"PageObject","type":"InlinedCode"},{"text":" create a class.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package pages\n\nimport static com.twosigma.webtau.WebTauDsl.*\n\nclass SearchPage {\n    def welcomeMessage \u003d $(\u0027#welcome\u0027)\n    def searchMessage \u003d $(\u0027#message\u0027)\n    def box \u003d $(\u0027#search-box\u0027)\n    def numberOfResults \u003d $(\u0027#results .result\u0027).count\n\n    def submit(query) {\n        browser.open(\"/search\")\n\n        box.setValue(query)\n        box.sendKeys(\"\\n\")\n    }\n}","type":"Snippet"}]},{"title":"Grouping","id":"grouping","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To make it easier to refer ","type":"SimpleText"},{"code":"PageObjects","type":"InlinedCode"},{"text":" from different tests combine them in one file","type":"SimpleText"}]},{"lang":"groovy","snippet":"package pages\n\nclass Pages {\n    static final search \u003d new SearchPage()\n    static final calculation \u003d new CalculationPage()\n    static final form \u003d new FormPage()\n}","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use static import to have seamless access to all of them","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.should \u003d\u003d 2\n}","type":"Snippet"}]}],"lastModifiedTime":1533554070000,"tocItem":{"sectionTitle":"UI","pageTitle":"Page Object","pageMeta":{},"fileName":"page-object","dirName":"UI","pageSectionIdTitles":[{"title":"Test Encapsulation","id":"test-encapsulation"},{"title":"Definition","id":"definition"},{"title":"Grouping","id":"grouping"}]}},{"type":"Page","content":[{"title":"Dynamic Scenarios","id":"dynamic-scenarios","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Every time you call ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":" method a new scenario is being registered.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Define scenarios in a loop to have dynamic scenarios based on provided data.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\n[1, 2, 3].each { number -\u003e\n    scenario(\"number $number\") {\n        println number\n    }\n}","title":"dynamic scenarios","type":"Snippet"}]},{"title":"CSV","id":"csv","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv","type":"InlinedCode"},{"text":" to conveniently build your scenarios from an external ","type":"SimpleText"},{"code":"CSV","type":"InlinedCode"},{"text":" data set.","type":"SimpleText"}]},{"lang":"csv","snippet":"title, input, output\nhello, 10, 20\nworld, 30, 40","title":"examples/use-cases.csv","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\ndata.csv(\u0027use-cases.csv\u0027).each { row -\u003e\n    scenario(\"use case ${row.title}\") {\n        println row.input\n        println row.output\n    }\n}","title":"CSV driven","type":"Snippet"}]},{"title":"Table Data","id":"table-data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" If you want to derive data and/or have a convenience of collocating data and tests","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\ndef lever \u003d 10\n\ndef useCases \u003d [\u0027title\u0027  | \u0027input\u0027    | \u0027output\u0027] {\n               ____________________________________\n                \u0027hello\u0027  | lever      | lever + 10\n                \u0027world\u0027  | lever + 30 | lever + 40 }\n\nuseCases.each { row -\u003e\n    scenario(\"use case ${row.title}\") {\n        println row.input\n        println row.output\n    }\n}","title":"Table Data driven","type":"Snippet"}]}],"lastModifiedTime":1541166954000,"tocItem":{"sectionTitle":"Groovy Specific Runner","pageTitle":"Data Driven Scenarios","pageMeta":{},"fileName":"data-driven-scenarios","dirName":"groovy-specific-runner","pageSectionIdTitles":[{"title":"Dynamic Scenarios","id":"dynamic-scenarios"},{"title":"CSV","id":"csv"},{"title":"Table Data","id":"table-data"}]}},{"type":"Page","content":[{"title":"Contain","id":"contain","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" matcher to test scenarios like search or list of recently created entries.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"This way you don\u0027t have to assume an existing state of your backend under test.","type":"SimpleText"}]},{"title":"Response","data":{"_embedded":{"customers":[{"id":1,"firstName":"FN1","lastName":"LN1","_links":{"self":{"href":"http://localhost:53987/customers/1"},"customer":{"href":"http://localhost:53987/customers/1"}}},{"id":2,"firstName":"FN2","lastName":"LN2","_links":{"self":{"href":"http://localhost:53987/customers/2"},"customer":{"href":"http://localhost:53987/customers/2"}}},{"id":3,"firstName":"FN3","lastName":"LN3","_links":{"self":{"href":"http://localhost:53987/customers/3"},"customer":{"href":"http://localhost:53987/customers/3"}}}]},"_links":{"self":{"href":"http://localhost:53987/customers/search/findAllByOrderByLastName"}}},"paths":[],"type":"Json"},{"type":"Paragraph","content":[{"text":"Given the response, we want to make sure there is an entry with a specified ","type":"SimpleText"},{"code":"firstName","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"lastName","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.springboot\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"list Customers and assert that it contains a specified entry\") {\n    http.get(\"/customers/search/findAllByOrderByLastName\") {\n        _embedded.customers.should contain([firstName: \u0027FN1\u0027, lastName: \u0027LN1\u0027])\n    }\n}","type":"Snippet"}]},{"title":"List Of Objects","id":"list-of-objects","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you want to make sure that all the values in the list are what you need - use ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.springboot\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"list Customers and assert with a Table Data\") {\n    http.post(\"/customers\", [firstName: \"FN1\", lastName: \"LN1\"])\n    http.post(\"/customers\", [firstName: \"FN2\", lastName: \"LN2\"])\n    http.post(\"/customers\", [firstName: \"FN3\", lastName: \"LN3\"])\n\n    http.get(\"/customers/search/findAllByOrderByLastName\") {\n        _embedded.customers.should \u003d\u003d [\u0027firstName\u0027 | \u0027lastName\u0027] {\n                                       __________________________\n                                             \u0027FN1\u0027 |      \u0027LN1\u0027\n                                             \u0027FN2\u0027 |      \u0027LN2\u0027\n                                             \u0027FN3\u0027 |      \u0027LN3\u0027 }\n    }\n\n    http.doc.capture(\u0027list-match\u0027)\n}","type":"Snippet"}]}],"lastModifiedTime":1533120126000,"tocItem":{"sectionTitle":"REST","pageTitle":"Complex Types","pageMeta":{},"fileName":"complex-types","dirName":"REST","pageSectionIdTitles":[{"title":"Contain","id":"contain"},{"title":"List Of Objects","id":"list-of-objects"}]}},{"type":"Page","content":[{"title":"Terminate All","id":"terminate-all","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"terminateAll","type":"InlinedCode"},{"text":" if you need to stop a current scenario and all the scenarios after that. Consequent scenarios will be marked","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"as skipped in the produced report.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"first test\") {\n    terminateAll(\u0027hard stop of the rest of the tests\u0027)\n}\n\nscenario(\"second test\") {\n    browser.open(\"/app\")\n}\n\nscenario(\"third test\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe \u003c 100\n    }\n}","title":"tests termination","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Test two and three in the example above will not be executed. Browser will not be opened and REST API will not be called.","type":"SimpleText"}]}]}],"lastModifiedTime":1541166954000,"tocItem":{"sectionTitle":"Groovy Specific Runner","pageTitle":"Tests Hard Stops","pageMeta":{},"fileName":"tests-hard-stops","dirName":"groovy-specific-runner","pageSectionIdTitles":[{"title":"Terminate All","id":"terminate-all"}]}},{"type":"Page","content":[{"title":"Overrides","id":"overrides","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Any config file parameter can be overridden with a command line parameter.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"For example, given this config file:","type":"SimpleText"}]},{"lang":"cfg","snippet":"waitTimeout \u003d 2500\nurl \u003d http://my-server\n","lineNumber":"","title":"webtau.cfg","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Values can be overridden as follows:","type":"SimpleText"}]},{"command":"webtau --waitTimeout\u003d25000 --url\u003dhttp://another-server","paramsToHighlight":[],"type":"CliCommand"}]}],"lastModifiedTime":1526573459000,"tocItem":{"sectionTitle":"Configuration","pageTitle":"Cli","pageMeta":{},"fileName":"cli","dirName":"configuration","pageSectionIdTitles":[{"title":"Overrides","id":"overrides"}]}},{"type":"Page","content":[{"title":"sscenario","id":"sscenario","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Define tests with ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"singleScenario","type":"InlinedCode"},{"text":" to only run those tests and skip all the other tests defined in all the test files.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Useful during tests creation or debugging.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\u0027step one\u0027) {\n    http.post(\u0027/reset\u0027) {\n        // ...\n    }\n}\n\nsscenario(\u0027step two\u0027) {\n    // test that you want to focus on\n}\n\nsingleScenario(\u0027step three\u0027) {\n    // test that you want to focus on\n}\n\nscenario(\u0027step four\u0027) {\n    http.put(\u0027/extra\u0027) {\n        // ...\n    }\n}","title":"Selective tests run","highlight":["sscenario","singleScenario"],"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"webtau","type":"InlinedCode"},{"text":" command line will exit with non zero code if there are ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" tests present","type":"SimpleText"}]}]}],"lastModifiedTime":1546526264000,"tocItem":{"sectionTitle":"Groovy Specific Runner","pageTitle":"Selective Run","pageMeta":{},"fileName":"selective-run","dirName":"groovy-specific-runner","pageSectionIdTitles":[{"title":"sscenario","id":"sscenario"}]}},{"type":"Page","content":[{"title":"File System Content","id":"file-system-content","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In following examples backend expects a file passed as ","type":"SimpleText"},{"code":"multipart/form-data","type":"InlinedCode"},{"text":". File content is expected to be stored in ","type":"SimpleText"},{"code":"file","type":"InlinedCode"},{"text":" field.","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"Backend responds with received file name and file description.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To ","type":"SimpleText"},{"code":"POST","type":"InlinedCode"},{"text":" form data, you need to use the same ","type":"SimpleText"},{"code":"http.post","type":"InlinedCode"},{"text":" statement as you saw in previous examples.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Second parameter should be ","type":"SimpleText"},{"code":"http.formData","type":"InlinedCode"},{"text":" instead of a map payload we used for ","type":"SimpleText"},{"code":"JSON","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"def imagePath \u003d testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: imagePath)) {\n    fileName.should \u003d\u003d \u0027image.png\u0027\n}","entry":"file upload example simple","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formFile","type":"InlinedCode"},{"text":" to override file name that is being sent to the backend.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def imagePath \u003d testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: http.formFile(\u0027myFileName.png\u0027, imagePath))) {\n    fileName.should \u003d\u003d \u0027myFileName.png\u0027\n}","entry":"file upload example with file name override","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Multiple form fields can be specified like in the example below.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def imagePath \u003d testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: imagePath, fileDescription: \u0027new report\u0027)) {\n    fileName.should \u003d\u003d \u0027image.png\u0027\n    description.should \u003d\u003d \u0027new report\u0027\n}","entry":"file upload example multiple fields","bodyOnly":true,"type":"Snippet"}]},{"title":"In-Memory Content","id":"in-memory-content","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If your test already has content, you can explicitly pass it as is.","type":"SimpleText"}]},{"lang":"groovy","snippet":"byte[] fileContent \u003d [1, 2, 3, 4] as byte[]\n\nhttp.post(\"/file-upload\", http.formData(file: fileContent)) {\n    fileName.should \u003d\u003d \u0027backend-generated-name-as-no-name-provided\u0027\n}","entry":"file upload example with in-memory content","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: no file name is passed and this particular backend generated file name on your behalf.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formFile","type":"InlinedCode"},{"text":" to provide a file name","type":"SimpleText"}]},{"lang":"groovy","snippet":"byte[] fileContent \u003d [1, 2, 3, 4] as byte[]\n\nhttp.post(\"/file-upload\", http.formData(\n        file: http.formFile(\u0027myFileName.dat\u0027, fileContent))) {\n    fileName.should \u003d\u003d \u0027myFileName.dat\u0027\n}","entry":"file upload example with in-memory content and file name","bodyOnly":true,"type":"Snippet"}]}],"lastModifiedTime":1539782115000,"tocItem":{"sectionTitle":"REST","pageTitle":"Files Upload","pageMeta":{},"fileName":"files-upload","dirName":"REST","pageSectionIdTitles":[{"title":"File System Content","id":"file-system-content"},{"title":"In-Memory Content","id":"in-memory-content"}]}},{"type":"Page","content":[{"title":"Asserting Text","id":"asserting-text","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If response contains a pdf file you can assert its content using ","type":"SimpleText"},{"code":"pdf(body)","type":"InlinedCode"},{"text":" function.","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.get(\"/report\") {\n    pdf(body).pageText(0).should contain(\u0027Quarterly earnings:\u0027)\n}","entry":"download pdf and assert page text using contains","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"If more than one assertion needs to be made, assign ","type":"SimpleText"},{"code":"pdf","type":"InlinedCode"},{"text":" result to a local variable.","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.get(\"/report\") {\n    def pdf \u003d pdf(body)\n    pdf.pageText(0).should contain(\u0027Quarterly earnings:\u0027)\n    pdf.pageText(1).should \u003d\u003d \u0027Intentional blank page\\n\u0027\n}","entry":"download pdf and assert page text using equal and contains","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: use pdf assertions for sanity checks like presence of correct client names or account numbers. Leave comprehensive pdf generation test to unit tests.","type":"SimpleText"}]}]}],"lastModifiedTime":1531427406000,"tocItem":{"sectionTitle":"REST","pageTitle":"PDF","pageMeta":{},"fileName":"PDF","dirName":"REST","pageSectionIdTitles":[{"title":"Asserting Text","id":"asserting-text"}]}},{"type":"Page","content":[{"title":"Implicit Page Open Logic","id":"implicit-page-open-logic","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can register a custom callback that will be called implicitly every time a web page is opened.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"One of the typical use cases is to inject cookies or values into a local storage before tests logic begins.","type":"SimpleText"}]}]},{"title":"Auto Login","id":"auto-login","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To register an open handler you need to define ","type":"SimpleText"},{"code":"browserPageNavigationHandlerProvider","type":"InlinedCode"},{"text":" config value.","type":"SimpleText"}]},{"lang":"cfg","snippet":"url \u003d \"http://localhost:8180\"\n\ndef userNameKey \u003d \u0027userName\u0027\nbrowserPageNavigationHandler \u003d { passedUrl, fullUrl, currentUrl -\u003e\n    if (browser.localStorage.getItem(userNameKey)) {\n        return\n    }\n\n    browser.localStorage.setItem(userNameKey, \u0027LoggedIn User\u0027)\n    browser.reopen(fullUrl)\n}","title":"webtau.cfg","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"page open handlers\") {\n    browser.open(\u0027/logged-in-user\u0027)\n    $(\u0027#welcome\u0027).should \u003d\u003d \u0027Welcome LoggedIn User\u0027\n}\n\nscenario(\"page open handlers during re-open\") {\n    browser.localStorage.clear()\n\n    browser.reopen(\u0027/logged-in-user\u0027)\n    $(\u0027#welcome\u0027).should \u003d\u003d \u0027Welcome LoggedIn User\u0027\n}","title":"Handler will be called before first assertion","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: usage of ","type":"SimpleText"},{"code":"localStorage","type":"InlinedCode"},{"text":" is just an example. You can use ","type":"SimpleText"},{"code":"cookies","type":"InlinedCode"},{"text":", call external services using ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":" or load","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"credentials from a file system.","type":"SimpleText"}]}]}],"lastModifiedTime":1537194491000,"tocItem":{"sectionTitle":"UI","pageTitle":"Page Open Handlers","pageMeta":{},"fileName":"page-open-handlers","dirName":"UI","pageSectionIdTitles":[{"title":"Implicit Page Open Logic","id":"implicit-page-open-logic"},{"title":"Auto Login","id":"auto-login"}]}},{"type":"Page","content":[{"title":"Text","id":"text","type":"Section","content":[{"lang":"groovy","snippet":"def message \u003d $(\u0027#message\u0027)\nmessage.should \u003d\u003d \u0027Select option\u0027","title":"exact text","type":"Snippet"},{"lang":"groovy","snippet":"def message \u003d $(\u0027#message\u0027)\nmessage.should \u003d\u003d ~/option/","title":"regexp text","type":"Snippet"},{"lang":"groovy","snippet":"def menu \u003d $(\u0027#menu ul li\u0027)\nmenu.should \u003d\u003d [\u0027Hello\u0027, \u0027Text\u0027, \u0027World\u0027]","title":"list of text","type":"Snippet"},{"lang":"groovy","snippet":"def menu \u003d $(\u0027#menu ul li\u0027)\nmenu.should \u003d\u003d [\u0027Hello\u0027, ~/T..t/, \u0027World\u0027]","title":"list of text and regexp","type":"Snippet"},{"meta":{"rightSide":true},"xmlAsJson":{"tagName":"div","attributes":[],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"message\""}],"children":[{"tagName":"","text":"Select option"}]},{"tagName":"div","attributes":[{"name":"id","value":"\"menu\""}],"children":[{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"Hello"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"Text"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"World"}]}]}]}]},"paths":[],"type":"Xml"}]},{"title":"Numbers","id":"numbers","type":"Section","content":[{"lang":"groovy","snippet":"def total \u003d $(\u0027#total\u0027)\ntotal.should \u003d\u003d 300.6","title":"exact number","type":"Snippet"},{"lang":"groovy","snippet":"def total \u003d $(\u0027#total\u0027)\ntotal.shouldBe \u003e 200","title":"greater than","type":"Snippet"},{"lang":"groovy","snippet":"def total \u003d $(\u0027#total\u0027)\ntotal.shouldBe \u003e\u003d 300","title":"greater than or equal","type":"Snippet"},{"lang":"groovy","snippet":"def split \u003d $(\u0027#split ul li\u0027)\nsplit.should \u003d\u003d [100, 28, 172.6]","title":"list of numbers","type":"Snippet"},{"lang":"groovy","snippet":"def split \u003d $(\u0027#split ul li\u0027)\nsplit.should \u003d\u003d [100, lessThan(100), greaterThanOrEqual(150)]","title":"list of exact and greater/less","type":"Snippet"},{"meta":{"rightSide":true},"xmlAsJson":{"tagName":"div","attributes":[],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"total\""}],"children":[{"tagName":"","text":"300.6"}]},{"tagName":"div","attributes":[{"name":"id","value":"\"split\""}],"children":[{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"100"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"28"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"172.6"}]}]}]}]},"paths":[],"type":"Xml"}]},{"title":"State","id":"state","type":"Section","content":[{"lang":"groovy","snippet":"def button \u003d $(\"#action\")\nbutton.should beDisabled()\nbutton.shouldNot beEnabled()","title":"enabled/disabled","type":"Snippet"},{"lang":"groovy","snippet":"def feedback \u003d $(\"#feedback\")\nfeedback.should beHidden()\nfeedback.shouldNot beVisible()","title":"visible/hidden","type":"Snippet"},{"lang":"html","snippet":"\u003cdiv\u003e \n \u003cbutton id\u003d\"action\" disabled\u003eClick me\u003c/button\u003e \n \u003cdiv id\u003d\"feedback\" style\u003d\"display: none;\"\u003e\u003c/div\u003e \n\u003c/div\u003e","meta":{"rightSide":true},"type":"Snippet"}]}],"lastModifiedTime":1546538351000,"tocItem":{"sectionTitle":"UI","pageTitle":"Matchers","pageMeta":{"type":["two-sides"]},"fileName":"matchers","dirName":"UI","pageSectionIdTitles":[{"title":"Text","id":"text"},{"title":"Numbers","id":"numbers"},{"title":"State","id":"state"}]}},{"type":"Page","content":[{"title":"Validation","id":"validation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Webtau supports validation of responses against an ","type":"SimpleText"},{"url":"https://www.openapis.org/","isFile":false,"type":"Link","content":[{"text":"OpenAPI specification","type":"SimpleText"}]},{"text":".  This feature can","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"be enabled by specifying the ","type":"SimpleText"},{"code":"openApiSpecUrl","type":"InlinedCode"},{"text":" configuration option.  This should be the URL to the specification against","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"which to validate.","type":"SimpleText"}]},{"lang":"cfg","snippet":"url \u003d \"http://localhost:8080\"\nopenApiSpecUrl \u003d \u0027api-spec.json\u0027","title":"Configuration","type":"Snippet"}]},{"title":"Current limitations","id":"current-limitations","type":"Section","content":[{"type":"Paragraph","content":[{"text":"OpenAPI specification support is still in its early stage.  It is fully functional but there are a few limitations to be","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"aware of:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"webtau currently only supports OpenAPI specification v2","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"specification matching is currently done purely based on the path","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"any HTTP requests which do not match any operation in the specification will not fail tests but will produce a warning","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"on the console","type":"SimpleText"}]}]}]}]},{"title":"Validations report","id":"validations-report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"The validation errors are reported in the same manner as assertion errors.  They are available in the output from the","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"command line webtau runner:","type":"SimpleText"}]},{"lang":"bash","snippet":"\u003e executing HTTP POST http://localhost:8080/customers\n {\n  \"id\": 1,\n  \"firstName\": \"FN\",\n  \"lastName\": \"LN\",\n  \"_links\": {\n    \"self\": {\n      \"href\": \"http://localhost:8080/customers/1\"\n    },\n    \"customer\": {\n      \"href\": \"http://localhost:8080/customers/1\"\n    }\n  }\n }\nX failed executing HTTP POST http://localhost:8080/customers : \nAPI spec validation failure: ERROR - Response status 201 not defined for path \u0027\u0027.: []\n[x] failed\njava.lang.AssertionError: \nAPI spec validation failure: ERROR - Response status 201 not defined for path \u0027\u0027.: []\n\tat scenarios.rest.springboot.customerCrud$_run_closure1.doCall(customerCrud.groovy:8)\n\tat scenarios.rest.springboot.customerCrud$_run_closure1.doCall(customerCrud.groovy)\n\n\n\nTotal: 1,  Passed: 0,  Skipped: 0,  Failed: 1,  Errored: 0\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"They are also available in the HTML report:","type":"SimpleText"}]},{"fit":true,"imageSrc":"/webtau/guide/img/rest-crud-openapi-spec-validation-error.png","timestamp":1546829938530,"shapes":[],"width":2242.0,"height":620.0,"type":"AnnotatedImage"}]},{"title":"Validation Configuration","id":"validation-configuration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To ignore additional properties in responses set ","type":"SimpleText"},{"code":"openApiIgnoreAdditionalProperties","type":"InlinedCode"},{"text":" to ","type":"SimpleText"},{"code":"true","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"As any other config value it can be done via command line, config file or system properties.","type":"SimpleText"}]}]}],"lastModifiedTime":1533120126000,"tocItem":{"sectionTitle":"REST","pageTitle":"OpenAPI Spec","pageMeta":{},"fileName":"openAPI-spec","dirName":"REST","pageSectionIdTitles":[{"title":"Validation","id":"validation"},{"title":"Current limitations","id":"current-limitations"},{"title":"Validations report","id":"validations-report"},{"title":"Validation Configuration","id":"validation-configuration"}]}},{"type":"Page","content":[{"title":"Scenarios","id":"scenarios","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You provide ","type":"SimpleText"},{"code":"REST endpoints","type":"InlinedCode"},{"text":" so users can execute various scenarios.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You need to test those scenarios and then document them.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To automate the process, let\u0027s capture executed scenarios and use them inside your documentation.","type":"SimpleText"}]}]},{"title":"Test Artifacts","id":"test-artifacts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To capture artifacts use ","type":"SimpleText"},{"code":"http.doc.capture","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static com.twosigma.webtau.WebTauDsl.http\nimport static com.twosigma.webtau.WebTauGroovyDsl.scenario\n\nscenario(\"extracting id after POST to use inside GET request\") {\n    def id \u003d http.post(\"/employee\", [firstName: \u0027FN\u0027, lastName: \u0027LN\u0027]) {\n        return id\n    }\n    http.doc.capture(\u0027employee-post\u0027)\n\n    http.get(\"/employee/$id\") {\n        firstName.should \u003d\u003d \u0027FN\u0027\n        lastName.should \u003d\u003d \u0027LN\u0027\n    }\n    http.doc.capture(\u0027employee-get\u0027) // capture previous HTTP call into \u003cdocDir\u003e/employee-get\n}","title":"test.groovy","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"An ","type":"SimpleText"},{"code":"employee-get","type":"InlinedCode"},{"text":" directory will be created with request and response data files.","type":"SimpleText"}]},{"title":"employee-get/response.json","data":{"firstName":"FN","lastName":"LN"},"paths":[],"type":"Json"},{"type":"Paragraph","content":[{"text":"Directory will also contain a json file with an array containing paths of all the asserted values.","type":"SimpleText"}]},{"title":"employee-get/paths.json","data":["root.firstName","root.lastName"],"paths":[],"type":"Json"},{"type":"Paragraph","content":[{"text":"By default, the directory will be created in the current working directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To change it add ","type":"SimpleText"},{"code":"docPath","type":"InlinedCode"},{"text":" to your ","type":"SimpleText"},{"code":"webtau.cfg","type":"InlinedCode"},{"text":" file.","type":"SimpleText"}]},{"lang":"cfg","snippet":"url \u003d \"http://localhost:8180\"\n\ndocPath \u003d \"doc-artifacts\"","title":"webtau.cfg","type":"Snippet"}]},{"title":"Document REST calls","id":"document-rest-calls","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you have user facing scenario tests, capture them and refer to them inside your documentation.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Set your documentation build pipeline like below.","type":"SimpleText"}]},{"diagram":{"shapeSvgByStyleId":{},"isInvertedTextColorByStyleId":{},"svg":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e\n\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\n\u003c!-- Generated by graphviz version 2.40.1 (20161225.0304)\n --\u003e\n\u003c!-- Title: Generated Pages: 1 --\u003e\n\u003csvg width\u003d\"392pt\" height\u003d\"47pt\"\n viewBox\u003d\"0.00 0.00 391.85 47.00\" xmlns\u003d\"http://www.w3.org/2000/svg\" xmlns:xlink\u003d\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg id\u003d\"graph0\" class\u003d\"graph\" transform\u003d\"scale(1 1) rotate(0) translate(4 43)\"\u003e\n\u003ctitle\u003eGenerated\u003c/title\u003e\n\u003cpolygon fill\u003d\"transparent\" stroke\u003d\"transparent\" points\u003d\"-4,4 -4,-43 387.8516,-43 387.8516,4 -4,4\"/\u003e\n\u003c!-- build --\u003e\n\u003cg id\u003d\"node1\" class\u003d\"node\"\u003e\n\u003ctitle\u003ebuild\u003c/title\u003e\n\u003cpolygon fill\u003d\"none\" stroke\u003d\"#000000\" points\u003d\"0,-.5 0,-38.5 54,-38.5 54,-.5 0,-.5\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"27\" y\u003d\"-16.5\" font-family\u003d\"Helvetica,sans-Serif\" font-size\u003d\"10.00\" fill\u003d\"#000000\"\u003eBuild\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- deploy --\u003e\n\u003cg id\u003d\"node2\" class\u003d\"node\"\u003e\n\u003ctitle\u003edeploy\u003c/title\u003e\n\u003cpolygon fill\u003d\"none\" stroke\u003d\"#000000\" points\u003d\"90,-.5 90,-38.5 149.1279,-38.5 149.1279,-.5 90,-.5\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"119.564\" y\u003d\"-16.5\" font-family\u003d\"Helvetica,sans-Serif\" font-size\u003d\"10.00\" fill\u003d\"#000000\"\u003eDeploy\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- build\u0026#45;\u0026gt;deploy --\u003e\n\u003cg id\u003d\"edge1\" class\u003d\"edge\"\u003e\n\u003ctitle\u003ebuild\u0026#45;\u0026gt;deploy\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"#000000\" d\u003d\"M54.2716,-19.5C62.2333,-19.5 71.1035,-19.5 79.6754,-19.5\"/\u003e\n\u003cpolygon fill\u003d\"#000000\" stroke\u003d\"#000000\" points\u003d\"79.9022,-23.0001 89.9022,-19.5 79.9021,-16.0001 79.9022,-23.0001\"/\u003e\n\u003c/g\u003e\n\u003c!-- testrun --\u003e\n\u003cg id\u003d\"node3\" class\u003d\"node\"\u003e\n\u003ctitle\u003etestrun\u003c/title\u003e\n\u003cpolygon fill\u003d\"none\" stroke\u003d\"#000000\" points\u003d\"185.1279,-.5 185.1279,-38.5 252.5908,-38.5 252.5908,-.5 185.1279,-.5\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"218.8594\" y\u003d\"-16.5\" font-family\u003d\"Helvetica,sans-Serif\" font-size\u003d\"10.00\" fill\u003d\"#000000\"\u003eTest Run\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- deploy\u0026#45;\u0026gt;testrun --\u003e\n\u003cg id\u003d\"edge2\" class\u003d\"edge\"\u003e\n\u003ctitle\u003edeploy\u0026#45;\u0026gt;testrun\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"#000000\" d\u003d\"M149.3559,-19.5C157.3159,-19.5 166.0912,-19.5 174.6485,-19.5\"/\u003e\n\u003cpolygon fill\u003d\"#000000\" stroke\u003d\"#000000\" points\u003d\"174.9089,-23.0001 184.9089,-19.5 174.9088,-16.0001 174.9089,-23.0001\"/\u003e\n\u003c/g\u003e\n\u003c!-- documentation --\u003e\n\u003cg id\u003d\"node4\" class\u003d\"node\"\u003e\n\u003ctitle\u003edocumentation\u003c/title\u003e\n\u003cpolygon fill\u003d\"none\" stroke\u003d\"#000000\" points\u003d\"288.5908,-.5 288.5908,-38.5 383.8516,-38.5 383.8516,-.5 288.5908,-.5\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"336.2212\" y\u003d\"-16.5\" font-family\u003d\"Helvetica,sans-Serif\" font-size\u003d\"10.00\" fill\u003d\"#000000\"\u003eDocumentation\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- testrun\u0026#45;\u0026gt;documentation --\u003e\n\u003cg id\u003d\"edge3\" class\u003d\"edge\"\u003e\n\u003ctitle\u003etestrun\u0026#45;\u0026gt;documentation\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"#000000\" d\u003d\"M252.8053,-19.5C260.7852,-19.5 269.5121,-19.5 278.219,-19.5\"/\u003e\n\u003cpolygon fill\u003d\"#000000\" stroke\u003d\"#000000\" points\u003d\"278.3852,-23.0001 288.3852,-19.5 278.3851,-16.0001 278.3852,-23.0001\"/\u003e\n\u003c/g\u003e\n\u003c/g\u003e\n\u003c/svg\u003e\n","stylesByNodeId":{"testrun":["h"]},"id":"dag1"},"colors":{"a":{"line":"#123752","fill":"#708EA4","text":"#eeeeee","textInverse":"#123752"},"b":{"line":"#AA8E39","fill":"#FFEAAA","text":"#806515","textInverse":"#AA8E39"},"c":{"line":"#306E12","fill":"#519331","text":"#ABDD93","textInverse":"#306E12"},"h":{"line":"#888","fill":"#fff","text":"#888","textInverse":"#888"}},"idsToHighlight":[],"wide":false,"urls":{},"type":"GraphVizDiagram"},{"type":"Paragraph","content":[{"text":"Combine REST requests and responses with Open API generated specs for complete documentation.","type":"SimpleText"}]}]}],"lastModifiedTime":1533120126000,"tocItem":{"sectionTitle":"REST","pageTitle":"Documentation","pageMeta":{},"fileName":"documentation","dirName":"REST","pageSectionIdTitles":[{"title":"Scenarios","id":"scenarios"},{"title":"Test Artifacts","id":"test-artifacts"},{"title":"Document REST calls","id":"document-rest-calls"}]}},{"type":"Page","content":[{"title":"Dependency","id":"dependency","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use maven to add webtau as a dependency to you project (for autocompletion or to use with JUnit like runners).","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"xml","snippet":"\u003cdependency\u003e\n    \u003cgroupId\u003ecom.twosigma.webtau\u003c/groupId\u003e\n    \u003cartifactId\u003ewebtau-groovy\u003c/artifactId\u003e\n    \u003cversion\u003e1.4\u003c/version\u003e\n\u003c/dependency\u003e","type":"Snippet"}]},{"name":"Java","content":[{"lang":"xml","snippet":"\u003cdependency\u003e\n    \u003cgroupId\u003ecom.twosigma.webtau\u003c/groupId\u003e\n    \u003cartifactId\u003ewebtau\u003c/artifactId\u003e\n    \u003cversion\u003e1.4\u003c/version\u003e\n\u003c/dependency\u003e","type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Plugin","id":"plugin","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use maven plugin to run pure groovy tests as part of your build.","type":"SimpleText"}]},{"lang":"xml","snippet":"\u003cplugin\u003e\n    \u003cgroupId\u003ecom.twosigma.webtau\u003c/groupId\u003e\n    \u003cartifactId\u003ewebtau-maven-plugin\u003c/artifactId\u003e\n    \u003cversion\u003e1.4\u003c/version\u003e\n    \u003cexecutions\u003e\n        \u003cexecution\u003e\n            \u003cphase\u003etest\u003c/phase\u003e\n            \u003cgoals\u003e\n                \u003cgoal\u003erun\u003c/goal\u003e\n            \u003c/goals\u003e\n        \u003c/execution\u003e\n    \u003c/executions\u003e\n    \u003cconfiguration\u003e\n        \u003cworkingDir\u003e${project.basedir}/src/main/groovy\u003c/workingDir\u003e\n        \u003cenv\u003eintegration\u003c/env\u003e\n        \u003curl\u003ehttp://optional-base-url\u003c/url\u003e\n        \u003ctests\u003e\n            \u003cdirectory\u003e${project.basedir}/src/main/groovy\u003c/directory\u003e\n            \u003cincludes\u003e\n                \u003cinclude\u003escenarios/*.groovy\u003c/include\u003e\n            \u003c/includes\u003e\n        \u003c/tests\u003e\n    \u003c/configuration\u003e\n\u003c/plugin\u003e","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"env","type":"InlinedCode"},{"text":" to specify ","type":"SimpleText"},{"url":"/webtau/guide/configuration/environments","isFile":false,"type":"Link","content":[{"text":"environment to use","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Alternatively you can use ","type":"SimpleText"},{"code":"url","type":"InlinedCode"},{"text":" to override base url.","type":"SimpleText"}]}]}],"lastModifiedTime":1535114675000,"tocItem":{"sectionTitle":"REST","pageTitle":"Maven","pageMeta":{},"fileName":"maven","dirName":"REST","pageSectionIdTitles":[{"title":"Dependency","id":"dependency"},{"title":"Plugin","id":"plugin"}]}},{"type":"Page","content":[{"title":"Installation","id":"installation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Download and unzip ","type":"SimpleText"},{"url":"https://repo.maven.apache.org/maven2/com/twosigma/webtau/webtau-dist/1.4/webtau-dist-1.4-webtau.zip","isFile":false,"type":"Link","content":[{"text":"webtau","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Add it to your ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"title":"Bare Minimum","id":"bare-minimum","type":"Section","content":[{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\u0027simple open\u0027) {\n    browser.open(\"/search\")\n    $(\u0027#welcome\u0027).should \u003d\u003d \u0027welcome to super search\u0027\n}","title":"examples/scenarios/ui/basic.groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To run test, navigate to ","type":"SimpleText"},{"code":"examples","type":"InlinedCode"},{"text":" dir and","type":"SimpleText"}]},{"command":"webtau scenarios/ui/basic.groovy --url\u003dhttps://my-server","paramsToHighlight":["url"],"type":"CliCommand"},{"type":"Paragraph","content":[{"text":"Note: using ","type":"SimpleText"},{"code":"package","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"import","type":"InlinedCode"},{"text":" is optional and is mainly for IDE auto completion. Imports will be added implicitly","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"during command line run.","type":"SimpleText"}]}]},{"title":"Config File","id":"config-file","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Url parameter can be moved to a ","type":"SimpleText"},{"code":"webtau.cfg","type":"InlinedCode"},{"text":" file.","type":"SimpleText"}]},{"lang":"cfg","snippet":"url \u003d \"http://localhost:8180\"","title":"examples/scenarios/ui/webtau.cfg","type":"Snippet"},{"type":"Paragraph","content":[{"url":"/webtau/guide/configuration/environments","isFile":false,"type":"Link","content":[{"text":"Specify multiple environments","type":"SimpleText"}]},{"text":" to streamline test execution.","type":"SimpleText"}]}]}],"lastModifiedTime":1534849042000,"tocItem":{"sectionTitle":"UI","pageTitle":"Getting Started","pageMeta":{},"fileName":"getting-started","dirName":"UI","pageSectionIdTitles":[{"title":"Installation","id":"installation"},{"title":"Bare Minimum","id":"bare-minimum"},{"title":"Config File","id":"config-file"}]}},{"type":"Page","content":[{"title":"WebTau","id":"webtau","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau (","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Web","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"T","type":"SimpleText"}]},{"text":"est ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"au","type":"SimpleText"}]},{"text":"tomation) - concise and expressive way to create REST API and Web UI tests.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"simple get\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe \u003c 100\n    }\n}","title":"REST API test","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.should \u003d\u003d 2\n}","title":"Web UI test","type":"Snippet"}]}],"lastModifiedTime":1533554070000,"tocItem":{"sectionTitle":"","pageTitle":"Index","pageMeta":{},"fileName":"index","dirName":"","pageSectionIdTitles":[{"title":"WebTau","id":"webtau"}]}},{"type":"Page","content":[{"title":"Example","id":"example","type":"Section","content":[{"type":"Paragraph","content":[{"text":"We have an app that exposes create, read, update, and delete operations for customer records. Records are being served","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"under ","type":"SimpleText"},{"code":"/customers","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is an example of a ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" operations test.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.springboot\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"CRUD operations for customer\") {\n    def customerPayload \u003d [firstName: \"FN\", lastName: \"LN\"]\n\n    int id \u003d http.post(\"/customers\", customerPayload) {\n        return id // return id value from response body\n    }\n\n    http.get(\"/customers/${id}\") {\n        body.should \u003d\u003d customerPayload // only specified properties will be asserted against\n    }\n\n    def changedLastName \u003d \"NLN\"\n    http.put(\"/customers/${id}\", [*:customerPayload, lastName: changedLastName]) {\n        lastName.should \u003d\u003d changedLastName // specifying body is optional\n    }\n\n    http.get(\"/customers/${id}\") {\n        lastName.should \u003d\u003d changedLastName\n    }\n\n    http.delete(\"/customers/${id}\") {\n        statusCode.should \u003d\u003d 204\n    }\n\n    http.get(\"/customers/${id}\") {\n        statusCode.should \u003d\u003d 404\n    }\n}","commentsType":"inline","type":"Snippet"}]},{"title":"Implicit statusCode Check","id":"implicit-statuscode-check","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you don\u0027t have an explicit ","type":"SimpleText"},{"code":"statusCode","type":"InlinedCode"},{"text":" validation it will be automatically validated based on the rules below","type":"SimpleText"}]},{"table":{"columns":[{"title":"Method","align":"left"},{"title":"Expected Code","align":"left"}],"data":[[[{"text":"GET","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"POST","type":"SimpleText"}],[{"text":"201","type":"SimpleText"}]],[[{"text":"PUT","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"PUT (no content)","type":"SimpleText"}],[{"text":"204","type":"SimpleText"}]],[[{"text":"DELETE","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"DELETE (no content)","type":"SimpleText"}],[{"text":"204","type":"SimpleText"}]]]},"type":"Table"}]},{"title":"Report","id":"report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"After your test executions a report will be produced.","type":"SimpleText"}]},{"fit":true,"imageSrc":"/webtau/guide/img/rest-report-http-calls.png","timestamp":1546829935547,"shapes":[],"width":2738.0,"height":1740.0,"type":"AnnotatedImage"},{"type":"Paragraph","content":[{"text":"Note: asserted values are being tracked and highlighted inside the report","type":"SimpleText"}]}]},{"title":"Spring Boot","id":"spring-boot","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau is framework agnostic. However, to make a concrete example, the ","type":"SimpleText"},{"code":"/customer","type":"InlinedCode"},{"text":" ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" endpoint","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"is created by using ","type":"SimpleText"},{"url":"https://projects.spring.io/spring-boot/","isFile":false,"type":"Link","content":[{"text":"Spring Boot","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Three files are required to have a working REST endpoint with ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" operations.","type":"SimpleText"}]},{"delimiter":".","startNumber":1,"type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Domain object","type":"SimpleText"}]},{"lang":"java","snippet":"package com.example.demo.springboot.app.data;\n\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\n\n@Entity\npublic class Customer {\n    private Long id;\n    private String firstName;\n    private String lastName;\n\n    @Id\n    @GeneratedValue\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id \u003d id;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public void setFirstName(String firstName) {\n        this.firstName \u003d firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public void setLastName(String lastName) {\n        this.lastName \u003d lastName;\n    }\n}","title":"Customer.java","type":"Snippet"}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Repository","type":"SimpleText"}]},{"lang":"java","snippet":"package com.example.demo.springboot.app.data;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.rest.core.annotation.RepositoryRestResource;\n\n@Api(tags \u003d \"customer\")\n@RepositoryRestResource(collectionResourceRel \u003d \"customers\", path \u003d \"customers\")\npublic interface CustomerRepository extends JpaRepository\u003cCustomer, Long\u003e {\n    @ApiOperation(\"find all customers ordered by last name\")\n    Iterable\u003cCustomer\u003e findAllByOrderByLastName();\n}","title":"CustomerRepository.java","type":"Snippet"}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Entry point","type":"SimpleText"}]},{"lang":"java","snippet":"package com.example.demo.springboot.app;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport springfox.documentation.builders.PathSelectors;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n\n@SpringBootApplication\n@EnableJpaRepositories\n@EnableSwagger2\n@Import({springfox.documentation.spring.data.rest.configuration.SpringDataRestConfiguration.class})\npublic class SpringBootDemoApp {\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBootDemoApp.class, args);\n    }\n\n    @Bean\n    public Docket api() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .select()\n                .apis(RequestHandlerSelectors.any())\n                .paths(PathSelectors.any())\n                .build();\n    }\n}","title":"SpringBootDemoApp.java","type":"Snippet"}]}]}]}],"lastModifiedTime":1533120126000,"tocItem":{"sectionTitle":"REST","pageTitle":"CRUD","pageMeta":{},"fileName":"CRUD","dirName":"REST","pageSectionIdTitles":[{"title":"Example","id":"example"},{"title":"Implicit statusCode Check","id":"implicit-statuscode-check"},{"title":"Report","id":"report"},{"title":"Spring Boot","id":"spring-boot"}]}},{"type":"Page","content":[{"title":"CLI and configuration file options","id":"cli-and-configuration-file-options","type":"Section","content":[{"table":{"columns":[{"title":"name"},{"title":"description"},{"title":"default value"}],"data":[[[{"type":"Paragraph","content":[{"text":"chromeBinPath","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"path to chrome binary","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"chromeDriverPath","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"path to chrome driver binary","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"config","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"config file path","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"webtau.cfg","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"docPath","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"path for screenshots and other generated artifacts for documentation","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"${workingDir}","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"env","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"environment id","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"local","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"headless","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"run headless mode","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"interactive","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"use CLI interactive mode","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"jsonSchemasDir","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"url of directory containing JSON schemas","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"noColor","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"disable ANSI colors","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"numberOfThreads","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"number of threads on which to run test files (one file per thread)","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"openApiIgnoreAdditionalProperties","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"ignore additional OpenAPI properties","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"openApiSpecUrl","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"url of OpenAPI 2 spec against which to validate http calls","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"reportPath","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"report file path","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"${workingDir}/webtau.report.html","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"staleElementRetry","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"number of times to automatically retry for stale element actions","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"5","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"url","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"base url for application under test","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"verbosityLevel","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"output verbosity level. 0 - no output; 1 - test names; 2 - first level steps; etc","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2147483647","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"waitTimeout","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"wait timeout in milliseconds","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"5000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"windowHeight","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"browser window height","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"800","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"windowWidth","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"browser window width","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"workingDir","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"logical working dir","type":"SimpleText"}]}],null]]},"type":"Table"}]},{"title":"Environment variable options","id":"environment-variable-options","type":"Section","content":[{"table":{"columns":[{"title":"environment variable"},{"title":"description"},{"title":"default value"}],"data":[[[{"type":"Paragraph","content":[{"text":"WEBTAU_CHROME_BIN_PATH","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"path to chrome binary","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"WEBTAU_CHROME_DRIVER_PATH","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"path to chrome driver binary","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"WEBTAU_CONFIG","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"config file path","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"webtau.cfg","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_DOC_PATH","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"path for screenshots and other generated artifacts for documentation","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"${workingDir}","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_ENV","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"environment id","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"local","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_HEADLESS","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"run headless mode","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_INTERACTIVE","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"use CLI interactive mode","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_JSON_SCHEMAS_DIR","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"url of directory containing JSON schemas","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"WEBTAU_NO_COLOR","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"disable ANSI colors","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_NUMBER_OF_THREADS","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"number of threads on which to run test files (one file per thread)","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_OPEN_API_IGNORE_ADDITIONAL_PROPERTIES","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"ignore additional OpenAPI properties","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_OPEN_API_SPEC_URL","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"url of OpenAPI 2 spec against which to validate http calls","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"WEBTAU_REPORT_PATH","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"report file path","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"${workingDir}/webtau.report.html","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_STALE_ELEMENT_RETRY","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"number of times to automatically retry for stale element actions","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"5","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_URL","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"base url for application under test","type":"SimpleText"}]}],null],[[{"type":"Paragraph","content":[{"text":"WEBTAU_VERBOSITY_LEVEL","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"output verbosity level. 0 - no output; 1 - test names; 2 - first level steps; etc","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2147483647","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_WAIT_TIMEOUT","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"wait timeout in milliseconds","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"5000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_WINDOW_HEIGHT","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"browser window height","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"800","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_WINDOW_WIDTH","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"browser window width","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"WEBTAU_WORKING_DIR","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"logical working dir","type":"SimpleText"}]}],null]]},"type":"Table"}]}],"lastModifiedTime":1536175669000,"tocItem":{"sectionTitle":"Configuration","pageTitle":"Options","pageMeta":{},"fileName":"options","dirName":"configuration","pageSectionIdTitles":[{"title":"CLI and configuration file options","id":"cli-and-configuration-file-options"},{"title":"Environment variable options","id":"environment-variable-options"}]}},{"type":"Page","content":[{"title":"Lazy Resource","id":"lazy-resource","type":"Section","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of separating one CRUD ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":" into multiple is to be able to run one test at a time.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In order to do it we will use ","type":"SimpleText"},{"code":"createLazyResource","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.springboot\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nclass Customer {\n    Number id\n    String url // store url of the created entity\n}\n\ndef customerPayload \u003d [firstName: \"FN\", lastName: \"LN\"]\n\ndef customer \u003d createLazyResource(\"customer\") { // lazy resource to be created on the first access\n    int id \u003d http.post(\"/customers\", customerPayload) {\n        return id\n    }\n\n    return new Customer(id: id, url: \"/customers/${id}\")\n}\n\nscenario(\"customer create\") {\n    customer.id.should !\u003d null // accessing resource for the first time will trigger POST (in this example)\n}\n\nscenario(\"customer read\") {\n    http.get(customer.url) { // convenient re-use of url defined above\n        body.should \u003d\u003d customerPayload\n    }\n}\n\nscenario(\"customer update\") {\n    def changedLastName \u003d \"NLN\"\n    http.put(customer.url, [*:customerPayload, lastName: changedLastName]) {\n        lastName.should \u003d\u003d changedLastName\n    }\n\n    http.get(customer.url) {\n        lastName.should \u003d\u003d changedLastName\n    }\n}\n\nscenario(\"customer delete\") {\n    http.delete(customer.url) {\n        statusCode.should \u003d\u003d 204\n    }\n\n    http.get(customer.url) {\n        statusCode.should \u003d\u003d 404\n    }\n}","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: to run one scenario at a time use ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" (additional ","type":"SimpleText"},{"code":"s","type":"InlinedCode"},{"text":" in front)","type":"SimpleText"}]}]},{"title":"Report","id":"report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"As you can see in the report below, each ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" operation has its own entry. If you follow this pattern, then you","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"can filter tests by ","type":"SimpleText"},{"code":"create","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"update","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"read","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"delete","type":"InlinedCode"},{"text":" to streamline investigation.","type":"SimpleText"}]},{"fit":true,"imageSrc":"/webtau/guide/img/rest-crud-separated-report.png","timestamp":1546829935781,"shapes":[],"width":2740.0,"height":1744.0,"type":"AnnotatedImage"}]}],"lastModifiedTime":1533120126000,"tocItem":{"sectionTitle":"REST","pageTitle":"CRUD Separated","pageMeta":{},"fileName":"CRUD-separated","dirName":"REST","pageSectionIdTitles":[{"title":"Lazy Resource","id":"lazy-resource"},{"title":"Report","id":"report"}]}},{"type":"Page","content":[{"title":"Serial execution","id":"serial-execution","type":"Section","content":[{"type":"Paragraph","content":[{"text":"The default mode for running tests is serially; in other words, scenario files are executed one after the other.","type":"SimpleText"}]}]},{"title":"Parallel execution","id":"parallel-execution","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Webtau supports executing tests in parallel.  In this mode, ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"scenario files","type":"SimpleText"}]},{"text":" are executed in parallel.  ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Individual","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"scenarios","type":"SimpleText"}]},{"text":" are still executed sequentially.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"For large test suites, it is therefore advisable to create many small focused scenario files instead of few large files.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To enable parallel execution, specify the ","type":"SimpleText"},{"code":"numberOfThreads","type":"InlinedCode"},{"text":" configuration property either through the configuration file","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"or as a CLI parameter.  This property dictates the maximum number of threads on which to run tests.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: scenario file execution order is not guaranteed.","type":"SimpleText"}]}]}],"lastModifiedTime":1536175669000,"tocItem":{"sectionTitle":"REST","pageTitle":"Test Execution","pageMeta":{},"fileName":"test-execution","dirName":"REST","pageSectionIdTitles":[{"title":"Serial execution","id":"serial-execution"},{"title":"Parallel execution","id":"parallel-execution"}]}},{"type":"Page","content":[{"title":"Base URL","id":"base-url","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Robust tests don\u0027t specify the full URL of an application under test.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Instead you only pass a relative URL to functions like ","type":"SimpleText"},{"code":"open","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\u0027simple open\u0027) {\n    browser.open(\"/search\")\n    $(\u0027#welcome\u0027).should \u003d\u003d \u0027welcome to super search\u0027\n}","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Define base URL portion either inside a ","type":"SimpleText"},{"code":"webtau.cfg","type":"InlinedCode"},{"text":" file","type":"SimpleText"}]},{"lang":"groovy","snippet":"url \u003d \"http://localhost:8180\"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"or pass as a command line argument ","type":"SimpleText"},{"code":"--url\u003dhttp://...","type":"InlinedCode"}]}]}],"lastModifiedTime":1533554070000,"tocItem":{"sectionTitle":"UI","pageTitle":"Basic Configuration","pageMeta":{},"fileName":"basic-configuration","dirName":"UI","pageSectionIdTitles":[{"title":"Base URL","id":"base-url"}]}},{"type":"Page","content":[{"title":"Validation","id":"validation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Webtau supports validation of objects against ","type":"SimpleText"},{"url":"https://json-schema.org/","isFile":false,"type":"Link","content":[{"text":"JSON Schema","type":"SimpleText"}]},{"text":".  It is possible to validate either","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"the entire body or just a specific field with the ","type":"SimpleText"},{"code":"complyWithSchema","type":"InlinedCode"},{"text":" matcher as shown in the two examples below:","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.get(\"/weather\") {\n    body.should complyWithSchema(\u0027valid-schema.json\u0027)\n}","title":"Validate entire body against JSON schema","type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"/city/London\") {\n    weather.should complyWithSchema(\u0027valid-schema.json\u0027)\n}","title":"Validate specific field against JSON schema","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Both examples above validate against the following schema:","type":"SimpleText"}]},{"title":"Correct schema for the example above","data":{"type":"object","required":["temperature"],"properties":{"temperature":{"type":"integer"}}},"paths":[],"type":"Json"}]},{"title":"Error messages","id":"error-messages","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Using the first example above, an invalid schema will generate an error similar to:","type":"SimpleText"}]},{"lang":"","snippet":"invalid schema (examples/scenarios/rest/jsonSchema/validateSchema.groovy)\n\u003e executing HTTP GET http://localhost:8080/weather\n  X failed expecting body to comply with schema invalid-schema.json : \n      body expected to comply with schema invalid-schema.json\n      [#: required key [anotherField] not found, #/temperature: expected type: Boolean, found: Integer]\n{\n  \"temperature\": 88\n}\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"The schema used in validation to generate this error is as follows:","type":"SimpleText"}]},{"title":"Incorrect schema for the example above","data":{"type":"object","required":["temperature","anotherField"],"properties":{"temperature":{"type":"boolean"},"anotherField":{"type":"string"}}},"paths":[],"type":"Json"}]},{"title":"Configuration","id":"configuration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"The path to the schema file specified in ","type":"SimpleText"},{"code":"complyWithSchema","type":"InlinedCode"},{"text":" can be relative or absolute.  If it\u0027s relative, it\u0027ll be","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"relative to the ","type":"SimpleText"},{"code":"jsonSchemasDir","type":"InlinedCode"},{"text":" specified in configuration and if not specified then relative to working directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"For example:","type":"SimpleText"}]},{"lang":"cfg","snippet":"url \u003d \"http://localhost:8180\"\njsonSchemasDir \u003d \u0027schemas\u0027","title":"Configuration","type":"Snippet"}]}],"lastModifiedTime":1543342014000,"tocItem":{"sectionTitle":"REST","pageTitle":"JSON Schema","pageMeta":{},"fileName":"JSON-schema","dirName":"REST","pageSectionIdTitles":[{"title":"Validation","id":"validation"},{"title":"Error messages","id":"error-messages"},{"title":"Configuration","id":"configuration"}]}},{"type":"Page","content":[{"title":"Access Local Storage","id":"access-local-storage","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To access local storage use ","type":"SimpleText"},{"code":"browser.localStorage","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Lets consider a simple web page that displays a value from a local storage.","type":"SimpleText"}]},{"lang":"html","snippet":"\u003cdiv id\u003d\"favorite-color\"\u003e \n\u003c/div\u003e \n\u003cscript\u003e\n    const element \u003d document.getElementById(\u0027favorite-color\u0027);\n    element.innerHTML \u003d localStorage.getItem(\u0027favoriteColor\u0027);\n\u003c/script\u003e","title":"Sample web page","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\"local storage api\") {\n    browser.open(\u0027/local-storage\u0027)\n    browser.localStorage.setItem(\u0027favoriteColor\u0027, \u0027clean\u0027)\n\n    def color \u003d $(\u0027#favorite-color\u0027)\n\n    browser.reopen(\u0027/local-storage\u0027)\n    color.should \u003d\u003d \u0027clean\u0027\n\n    browser.localStorage.clear()\n    browser.reopen(\u0027/local-storage\u0027)\n    color.should \u003d\u003d \u0027\u0027\n}","title":"Setting storage after opening page","type":"Snippet"},{"lang":"java","snippet":"public String getItem(String key)\npublic void setItem(String key, String value)\npublic String removeItem(String key)\npublic void clear()\npublic int size()","entries":["getItem","setItem","removeItem","clear","size"],"title":"Local Storage methods","signatureOnly":true,"type":"Snippet"}]}],"lastModifiedTime":1537478562000,"tocItem":{"sectionTitle":"UI","pageTitle":"Local Storage","pageMeta":{},"fileName":"local-storage","dirName":"UI","pageSectionIdTitles":[{"title":"Access Local Storage","id":"access-local-storage"}]}},{"type":"Page","content":[{"title":"Standard Header","id":"standard-header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Standard headers like ","type":"SimpleText"},{"code":"Content-Type","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"Accept","type":"InlinedCode"},{"text":" are set on your behalf.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"When payload content is present then values are based on the content type you are sending.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"When no payload is present, it defaults to ","type":"SimpleText"},{"code":"application/json","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"title":"Common Header","id":"common-header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If each http request requires the same header you can specify that header using ","type":"SimpleText"},{"code":"httpHeaderProvider","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Common example is specifying authentication header.","type":"SimpleText"}]},{"lang":"cfg","snippet":"import scenarios.rest.headers.auth.Auth\n\nurl \u003d \"http://localhost:8080\"\n\nhttpHeaderProvider \u003d Auth.\u0026authHeader","title":"webtau.cfg","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Auth.\u0026authHeader","type":"InlinedCode"},{"text":" is implemented as follows:","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.headers.auth\n\nimport com.twosigma.webtau.console.ConsoleOutputs\nimport com.twosigma.webtau.http.HttpHeader\n\nclass Auth {\n    static HttpHeader authHeader(String fullUrl, String url, HttpHeader original) {\n        ConsoleOutputs.out(\u0027auth header injection point\u0027)\n        return original.merge([Authorization: \u0027Bearer \u003ctoken\u003e\u0027])\n    }\n}","title":"scenarios/rest/headers/auth/Auth.groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"This removes implementation details from your tests and makes them less brittle.","type":"SimpleText"}]}]},{"title":"Explicit Header","id":"explicit-header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To explicitly set header pass ","type":"SimpleText"},{"code":"http.header(values)","type":"InlinedCode"},{"text":" as an additional parameter.","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.get(\"/end-point\", http.header(\u0027Accept\u0027, \u0027application/octet-stream\u0027)) {\n    // assertions go here\n}\n\nhttp.get(\"/end-point\", [queryParam1: \u0027queryParamValue1\u0027],\n        http.header(\u0027Accept\u0027, \u0027application/octet-stream\u0027)) {\n    // assertions go here\n}\n\nhttp.post(\"/end-point\", http.header(\u0027Accept\u0027, \u0027application/octet-stream\u0027),\n        [fileId: \u0027myFile\u0027]) {\n    // assertions go here\n}\n\nhttp.put(\"/end-point\", http.header(\u0027Accept\u0027, \u0027application/octet-stream\u0027),\n        [fileId: \u0027myFile\u0027, file: sampleFile]) {\n    // assertions go here\n}\n\nhttp.delete(\"/end-point\", http.header(\u0027Custom-Header\u0027, \u0027special-value\u0027))","entry":"explicit header passing example","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Additionally ","type":"SimpleText"},{"code":"http.header","type":"InlinedCode"},{"text":" accepts values as a map.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def varArgHeader \u003d http.header(\n        \u0027My-Header1\u0027, \u0027Value1\u0027,\n        \u0027My-Header2\u0027, \u0027Value2\u0027)\n\ndef mapBasedHeader \u003d http.header([\n        \u0027My-Header1\u0027: \u0027Value1\u0027,\n        \u0027My-Header2\u0027: \u0027Value2\u0027])\n\nassert varArgHeader \u003d\u003d mapBasedHeader","entry":"header creation","bodyOnly":true,"type":"Snippet"}]},{"title":"Mime Type Combined With Payload","id":"mime-type-combined-with-payload","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.body","type":"InlinedCode"},{"text":" to combine ","type":"SimpleText"},{"code":"Content-Type","type":"InlinedCode"},{"text":" and payload.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def content \u003d binaryFile(\u0027path\u0027)\nhttp.post(\"/end-point\", http.body(\"application/octet-stream\", content)) {\n    // assertions go here\n}","title":"Combined type and payload","entry":"explicit binary mime types combined with request body","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you need a standard type consider using","type":"SimpleText"}]},{"lang":"groovy","snippet":"def content \u003d binaryFile(\u0027path\u0027)\nhttp.post(\"/end-point\", http.application.octetStream(content)) {\n    // assertions go here\n}","title":"Binary content shortuct","entry":"post implicit binary mime types combined with request body","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"def content \u003d \u0027text content\u0027\nhttp.post(\"/end-point\", http.text.plain(content)) {\n    // assertions go here\n}","title":"Text content shortcut","entry":"implicit text mime types combined with request body","bodyOnly":true,"type":"Snippet"}]},{"title":"Response Header","id":"response-header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To validate values from response header use ","type":"SimpleText"},{"code":"header","type":"InlinedCode"},{"text":" object.","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.post(\"/end-point\") {\n    header.location.should \u003d\u003d \u0027http://www.example.org/url/23\u0027\n    header[\u0027Location\u0027].should \u003d\u003d \u0027http://www.example.org/url/23\u0027\n\n    header.contentLocation.should \u003d\u003d \u0027/url/23\u0027\n    header[\u0027Content-Location\u0027].should \u003d\u003d \u0027/url/23\u0027\n\n    header.contentLength.should \u003d\u003d 303\n    header[\u0027Content-Length\u0027].should \u003d\u003d 303\n}","entry":"header assertion with shortcut","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"At the moment only ","type":"SimpleText"},{"code":"location","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLocation","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLength","type":"InlinedCode"},{"text":" have camelCase shortcuts.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"All the other header values you need to use ","type":"SimpleText"},{"code":"[\u0027Header-Name\u0027]","type":"InlinedCode"},{"text":" syntax.","type":"SimpleText"}]}]}],"lastModifiedTime":1541730676000,"tocItem":{"sectionTitle":"REST","pageTitle":"Headers","pageMeta":{},"fileName":"headers","dirName":"REST","pageSectionIdTitles":[{"title":"Standard Header","id":"standard-header"},{"title":"Common Header","id":"common-header"},{"title":"Explicit Header","id":"explicit-header"},{"title":"Mime Type Combined With Payload","id":"mime-type-combined-with-payload"},{"title":"Response Header","id":"response-header"}]}},{"type":"Page","content":[{"title":"Skipping Tests on Condition","id":"skipping-tests-on-condition","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"onlyWhen","type":"InlinedCode"},{"text":" if you need to skip tests based on a condition.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nString emailHost \u003d cfg.emailHost\n\nonlyWhen(\u0027email server is internal\u0027, { -\u003e emailHost.contains(\u0027internal.server\u0027)}) {\n    scenario(\u0027confirmation emails should be sent\u0027) {\n        // ...\n        http.get(emailHost) {\n            subjects.should contain(\u0027my message\u0027)\n        }\n    }\n}","title":"Conditional tests skip","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Tests will still appear as part of your report but will be marked as skipped.","type":"SimpleText"}]}]},{"title":"Skipping Tests Based on Env","id":"skipping-tests-based-on-env","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"onlyForEnv","type":"InlinedCode"},{"text":" shortcut if you need to skip tests for certain environment.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nonlyForEnv(\u0027experimental\u0027) {\n    scenario(\u0027this scenario will only be executed in \"experimental\" env\u0027) {\n        http.get(\u0027/new-endpoint\u0027) {\n            price.shouldBe \u003e 0\n        }\n    }\n}","title":"Environment specific tests","type":"Snippet"}]},{"title":"Custom Shortcuts","id":"custom-shortcuts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Consider creating your project specific shortcuts to avoid boilerplate.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Here is an example of ","type":"SimpleText"},{"code":"onlyForEnv","type":"InlinedCode"},{"text":" shortcut definition.","type":"SimpleText"}]},{"lang":"groovy","snippet":"static void onlyForEnv(String env, Closure registrationCode) {\n    onlyWhen(\"only for \u003c$env\u003e environment\",\n            { -\u003e getCfg().getEnv() \u003d\u003d env },\n            registrationCode)\n}","entry":"onlyForEnv","title":"Custom shortcut","type":"Snippet"}]},{"title":"Unconditionally Skipping Tests","id":"unconditionally-skipping-tests","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Instead of ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":", use ","type":"SimpleText"},{"code":"dscenario","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"disabledScenario","type":"InlinedCode"},{"text":" to always skip a test.  This is analogous to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Junit\u0027s ","type":"SimpleText"},{"code":"@Ignore","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"@Disabled","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\ndscenario(\u0027do not execute this scenario\u0027) {\n    http.get(\u0027/new-endpoint\u0027) {\n        price.shouldBe \u003e 0\n    }\n}\n\ndisabledScenario(\u0027do not execute this scenario either\u0027) {\n    http.get(\u0027/new-endpoint\u0027) {\n        price.shouldBe \u003e 0\n    }\n}","title":"Disable tests","type":"Snippet"}]}],"lastModifiedTime":1546526264000,"tocItem":{"sectionTitle":"Groovy Specific Runner","pageTitle":"Skipping Tests","pageMeta":{},"fileName":"skipping-tests","dirName":"groovy-specific-runner","pageSectionIdTitles":[{"title":"Skipping Tests on Condition","id":"skipping-tests-on-condition"},{"title":"Skipping Tests Based on Env","id":"skipping-tests-based-on-env"},{"title":"Custom Shortcuts","id":"custom-shortcuts"},{"title":"Unconditionally Skipping Tests","id":"unconditionally-skipping-tests"}]}},{"type":"Page","content":[{"title":"Imports to use","id":"imports-to-use","type":"Section","content":[{"type":"Paragraph","content":[{"text":"For tests outside standard JVM runners like ","type":"SimpleText"},{"code":"JUnit","type":"InlinedCode"},{"text":" a single optional static import is all you need","type":"SimpleText"}]},{"lang":"groovy","snippet":"import static com.twosigma.webtau.WebTauGroovyDsl.*\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"For ","type":"SimpleText"},{"code":"JUnit","type":"InlinedCode"},{"text":" like pure HTTP tests","type":"SimpleText"}]},{"lang":"groovy","snippet":"import static com.twosigma.webtau.Ddjt.*\nimport static com.twosigma.webtau.http.Http.http\n","lineNumber":"","type":"Snippet"}]},{"title":"Response Mapping","id":"response-mapping","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Identifiers inside validation closure are automatically mapped to a response body.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"object response","meta":{"rightSide":false},"data":{"id":"id1","k1":"v1","k2":"v2"},"paths":[],"type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-simple-object\") {\n    k1.should \u003d\u003d \u0027v1\u0027\n}","entry":"simple object mapping example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-simple-object\", (header, body) -\u003e {\n    body.get(\"k1\").should(equal(\"v1\"));\n});","entry":"simpleObjectMappingExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"List responses are handled by using index chain","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"list response","data":[{"id":"id1","k1":"v1","k2":"v2"}],"paths":[],"type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-simple-list\") {\n    body[0].k1.should \u003d\u003d \u0027v1\u0027\n}","entry":"simple list mapping example","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: Groovy API implicitly assumes ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":", but if you need to deal with array response you need to access values using ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":" explicitly.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-simple-list\", (header, body) -\u003e {\n    body.get(0).get(\"k1\").should(equal(\"v1\"));\n});","entry":"simpleListMappingExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Should and Should Not","id":"should-and-should-not","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Matchers in webtau are triggered with ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNot","type":"InlinedCode"},{"text":" keywords.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Additionally ","type":"SimpleText"},{"code":"shouldBe","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNotBe","type":"InlinedCode"},{"text":" alias keywords are available to make certain matcher combinations easier to read.","type":"SimpleText"}]},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/example\") {\n    year.shouldNot \u003d\u003d 2000\n    year.should !\u003d 2000  // alternative shortcut\n    genres.should contain(\u0027RPG\u0027)\n    rating.shouldBe \u003e 7\n}","entry":"matchers basic example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/example\", (header, body) -\u003e {\n    body.get(\"year\").shouldNot(equal(2000));\n    body.get(\"genres\").should(contain(\"RPG\"));\n    body.get(\"rating\").shouldBe(greaterThan(7));\n});","entry":"matchersBasicExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Equality","id":"equality","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Webtau defines its own set of equality rules to simplify testing.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-object-equality-matchers/paths.json","data":{"id":10,"price":100,"amount":30,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":30},{"id":"id2","k1":"v11","k2":40}]},"paths":["root.id","root.amount","root.list[0]","root.list[1]","root.list[2]","root.object.k1","root.object.k3","root.complexList[0].k1","root.complexList[0].k2","root.complexList[1].k1","root.complexList[1].k2"],"type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    id.should !\u003d 0\n    amount.should \u003d\u003d 30\n\n    list.should \u003d\u003d [1, 2, 3]\n\n    object.k1.should \u003d\u003d ~/v\\d/ // regular expression matching\n\n    object.should \u003d\u003d [k1: \u0027v1\u0027, k3: \u0027v3\u0027] // matching only specified fields and can be nested multiple times\n\n    complexList.should \u003d\u003d [\"k1\"   | \"k2\"] { // matching only specified fields, but number of entries must be exact\n                           ________________\n                            \"v1\"  | 30\n                            \"v11\" | 40 }\n}\n\nhttp.doc.capture(\"end-point-object-equality-matchers\")","entry":"equality matcher","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -\u003e {\n    body.get(\"id\").shouldNot(equal(0));\n    body.get(\"amount\").should(equal(30));\n\n    body.get(\"list\").should(equal(Arrays.asList(1, 2, 3)));\n\n    body.get(\"object\").get(\"k1\").should(equal(\n            Pattern.compile(\"v\\\\d\"))); // regular expression matching\n\n    body.get(\"object\").should(equal(aMapOf(\n            \"k1\", \"v1\",\n            \"k3\", \"v3\"))); // matching only specified fields and can be nested multiple times\n\n    body.get(\"complexList\").should(equal(table(\"k1\" , \"k2\").values( // matching only specified fields, but number of entries must be exact\n            \"v1\" ,  30,\n            \"v11\",  40)));\n});\n\nhttp.doc.capture(\"end-point-object-equality-matchers\");","entry":"equalityMatcher","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Greater/Less/Equal","id":"greaterlessequal","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"greaterThan","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"greaterThanOrEqual","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"lessThan","type":"InlinedCode"},{"text":", and ","type":"SimpleText"},{"code":"lessThanOrEqual","type":"InlinedCode"},{"text":" to assert numeric values.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-numbers-matchers/paths.json","data":{"id":10,"price":100,"amount":30,"list":[1,2,3]},"paths":["root.id","root.price","root.amount","root.list[1]"],"type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-numbers\") {\n    id.shouldBe \u003e 0\n    price.shouldBe \u003e\u003d 100\n    amount.shouldBe \u003c 150\n    list[1].shouldBe \u003c\u003d 2\n\n    id.shouldNotBe \u003c\u003d 0\n    price.shouldNotBe \u003c 100\n    amount.shouldNotBe \u003e\u003d 150\n    list[1].shouldNotBe \u003e 2\n}\n\nhttp.doc.capture(\"end-point-numbers-matchers\")","entry":"compare numbers with greater less matchers","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"Groovy","type":"InlinedCode"},{"text":" can use shortcuts ","type":"SimpleText"},{"code":"\u003e","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"\u003e\u003d","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"\u003c","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"\u003c\u003d","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-numbers\", (header, body) -\u003e {\n    body.get(\"id\").shouldBe(greaterThan(0));\n    body.get(\"price\").shouldBe(greaterThanOrEqual(100));\n    body.get(\"amount\").shouldBe(lessThan(150));\n    body.get(\"list\").get(1).shouldBe(lessThanOrEqual(2));\n\n    body.get(\"id\").shouldNotBe(lessThanOrEqual(0));\n    body.get(\"price\").shouldNotBe(lessThan(100));\n    body.get(\"amount\").shouldNotBe(greaterThanOrEqual(150));\n    body.get(\"list\").get(1).shouldNotBe(greaterThan(2));\n});\n\nhttp.doc.capture(\"end-point-numbers-matchers\");","entry":"compareNumbersWithGreaterLessMatchers","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Contain","id":"contain","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" when you cannot rely on order of values in a response.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-list-contain-matchers/paths.json","data":[{"id":"id1","k1":"v1","k2":"v2"},{"id":"id2","k1":"v11","k2":[10,20,30]}],"paths":["root[0].k1","root[0].k2","root[1].k2[0]","root[1].k2[1]","root[1].k2[2]"],"type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-list\") {\n    body.should contain([k1: \u0027v1\u0027, k2: \u0027v2\u0027])\n    body[1].k2.shouldNot contain(22)\n}\n\nhttp.doc.capture(\"end-point-list-contain-matchers\")","entry":"contain matcher","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-list\", (header, body) -\u003e {\n    body.should(contain(aMapOf(\n            \"k1\", \"v1\",\n            \"k2\", \"v2\")));\n    body.get(1).get(\"k2\").shouldNot(contain(22));\n});\n\nhttp.doc.capture(\"end-point-list-contain-matchers\");","entry":"containMatcher","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Date and Time","id":"date-and-time","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can assert ","type":"SimpleText"},{"code":"actual","type":"InlinedCode"},{"text":" string against ","type":"SimpleText"},{"code":"LocalDate","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"ZonedDateTime","type":"InlinedCode"},{"text":". String will be automatically converted","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"using ISO formatter.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-dates-matchers/paths.json","data":{"id":54,"tradeDate":"2018-06-12","transactionTime":"2018-06-12T10:00:00+01:00:00","paymentSchedule":["2018-06-12","2018-07-10","2018-08-09","2018-09-12"]},"paths":["root.tradeDate","root.transactionTime","root.paymentSchedule[0]"],"type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-dates\") {\n    def expectedDate \u003d LocalDate.of(2018, 6, 12)\n    def expectedTime \u003d ZonedDateTime.of(expectedDate,\n        LocalTime.of(9, 0, 0),\n        ZoneId.of(\"UTC\"))\n\n    tradeDate.should \u003d\u003d expectedDate\n    transactionTime.should \u003d\u003d expectedTime\n    transactionTime.shouldBe \u003e\u003d expectedDate\n\n    paymentSchedule.should contain(expectedDate)\n}\n\nhttp.doc.capture(\"end-point-dates-matchers\")","entry":"working with dates","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-dates\", (header, body) -\u003e {\n    LocalDate expectedDate \u003d LocalDate.of(2018, 6, 12);\n    ZonedDateTime expectedTime \u003d ZonedDateTime.of(expectedDate,\n            LocalTime.of(9, 0, 0),\n            ZoneId.of(\"UTC\"));\n\n    body.get(\"tradeDate\").should(equal(expectedDate));\n    body.get(\"transactionTime\").should(equal(expectedTime));\n    body.get(\"transactionTime\").shouldBe(greaterThanOrEqual(expectedDate));\n\n    body.get(\"paymentSchedule\").should(contain(expectedDate));\n});\n\nhttp.doc.capture(\"end-point-dates-matchers\");","entry":"workingWithDates","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"title":"Mixing Matchers","id":"mixing-matchers","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use matchers in place of expected values to build a more complex expectation.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-mixing-matchers/paths.json","data":{"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":100},{"id":"id2","k1":"v11","k2":200}]},"paths":["root.list[0]","root.list[1]","root.object.k1","root.object.k3","root.complexList[0].k1","root.complexList[0].k2","root.complexList[1].k1","root.complexList[1].k2"],"type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-mixed\") {\n    list.should contain(lessThanOrEqual(2)) // lessThanOrEqual will be matched against each value\n\n    object.should \u003d\u003d [k1: \u0027v1\u0027, k3: ~/v\\d/] // regular expression match against k3\n\n    complexList[0].should \u003d\u003d [k1: \u0027v1\u0027, k2: lessThan(120)] // lessThen match against k2\n\n    complexList[1].should \u003d\u003d [\n        k1: notEqual(\u0027v1\u0027), // any value but v1\n        k2: greaterThanOrEqual(120)]\n\n    complexList.should \u003d\u003d [\"k1\"   | \"k2\"] {\n                          ___________________________\n                           ~/v\\d/ | lessThan(120)\n                            \"v11\" | greaterThan(150) } // using matchers as cell values\n}\n\nhttp.doc.capture(\"end-point-mixing-matchers\")","entry":"matchers combo","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Pattern withNumber \u003d Pattern.compile(\"v\\\\d\");\n\nhttp.get(\"/end-point-mixed\", (header, body) -\u003e {\n    body.get(\"list\").should(contain(lessThanOrEqual(2))); // lessThanOrEqual will be matched against each value\n\n    body.get(\"object\").should(equal(aMapOf(\n            \"k1\", \"v1\",\n            \"k3\", withNumber))); // regular expression match against k3\n\n    body.get(\"complexList\").get(0).should(equal(aMapOf(\n            \"k1\", \"v1\",\n            \"k2\", lessThan(120)))); // lessThen match against k2\n\n    body.get(\"complexList\").get(1).should(equal(aMapOf(\n            \"k1\", notEqual(\"v1\"), // any value but v1\n            \"k2\", greaterThanOrEqual(120))));\n\n    TableData expected \u003d table(\"k1\",       \"k2\").values( // matching only specified fields, but number of entries must be exact\n                                withNumber, lessThan(120),\n                                \"v11\",      greaterThan(150));\n\n    body.get(\"complexList\").should(equal(expected));\n});\n\nhttp.doc.capture(\"end-point-mixing-matchers\");","entry":"matchersCombo","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1539782115000,"tocItem":{"sectionTitle":"REST","pageTitle":"Matchers","pageMeta":{"type":["two-sides"]},"fileName":"matchers","dirName":"REST","pageSectionIdTitles":[{"title":"Imports to use","id":"imports-to-use"},{"title":"Response Mapping","id":"response-mapping"},{"title":"Should and Should Not","id":"should-and-should-not"},{"title":"Equality","id":"equality"},{"title":"Greater/Less/Equal","id":"greaterlessequal"},{"title":"Contain","id":"contain"},{"title":"Date and Time","id":"date-and-time"},{"title":"Mixing Matchers","id":"mixing-matchers"}]}},{"type":"Page","content":[{"title":"Synchronization","id":"synchronization","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Many actions in a modern web page are asynchronous. User presses a button and a moment later a result appears.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In modern web pages there is no full page reload and only a portion of a page will be changed.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"If a test will try to assert a value after a user action, chances are assertion will fail since it will take time","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"for a result to appear on a page.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Question: How do users know that their action is done and they can move on?","type":"SimpleText"}]}]},{"title":"Visible/Hidden Element","id":"visiblehidden-element","type":"Section","content":[{"type":"Paragraph","content":[{"text":"One way to deal with asynchronous pages is to wait for a feedback to appear or disappear.","type":"SimpleText"}]},{"lang":"groovy","snippet":"calculation.start()\n\ncalculation.feedback.waitTo beVisible()\ncalculation.results.should \u003d\u003d [100, 230]","title":"beVisible matcher","type":"Snippet"}]},{"title":"Enabled/Disabled Element","id":"enableddisabled-element","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Disabled input box and buttons can be used as a user feedback as well.","type":"SimpleText"}]},{"lang":"groovy","snippet":"calculation.open()\n\ncalculation.input.waitTo beEnabled()\ncalculation.input.setValue(100)","title":"beEnabled matcher","type":"Snippet"}]},{"title":"Wait to match","id":"wait-to-match","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If presence/absence of an element is not important, you can directly to wait for a matcher to match.","type":"SimpleText"}]},{"lang":"groovy","snippet":"calculation.start()\ncalculation.results.waitTo \u003d\u003d [100, 230]","title":"waitTo any matcher","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: any matcher that you can use with ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNot","type":"InlinedCode"},{"text":" can be used with ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitToNot","type":"InlinedCode"}]}]},{"title":"Wait on url","id":"wait-on-url","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Another cue to use could be a url change after an action.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.open(\u0027/resource-creation\u0027)\n\n$(\u0027#new\u0027).click()\nbrowser.url.ref.waitTo \u003d\u003d \u0027created-id\u0027","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: url exposes other parts that you can ","type":"SimpleText"},{"url":"/webtau/guide/UI/navigation#assert-url","isFile":false,"type":"Link","content":[{"text":"read more about here","type":"SimpleText"}]}]}]}],"lastModifiedTime":1546614417000,"tocItem":{"sectionTitle":"UI","pageTitle":"Asynchronous Page","pageMeta":{},"fileName":"asynchronous-page","dirName":"UI","pageSectionIdTitles":[{"title":"Synchronization","id":"synchronization"},{"title":"Visible/Hidden Element","id":"visiblehidden-element"},{"title":"Enabled/Disabled Element","id":"enableddisabled-element"},{"title":"Wait to match","id":"wait-to-match"},{"title":"Wait on url","id":"wait-on-url"}]}},{"type":"Page","content":[{"title":"Lazy Element","id":"lazy-element","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you use ","type":"SimpleText"},{"code":"$(\u0027.css\u0027)","type":"InlinedCode"},{"text":" you create instance of ","type":"SimpleText"},{"code":"PageElement","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"code":"PageElement","type":"InlinedCode"},{"text":" represent an element that is present or ","type":"SimpleText"},{"type":"Emphasis","content":[{"text":"will be present","type":"SimpleText"}]},{"text":" on a web page. It is safe to declare an element","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"before you open a browser or navigate to the page you need to test.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\ndef welcomeMessage \u003d $(\u0027#welcome\u0027)\n\nscenario(\u0027simple open\u0027) {\n    browser.open(\"/search\")\n    welcomeMessage.should \u003d\u003d \u0027welcome to super search\u0027\n}","type":"Snippet"}]},{"title":"Lazy Value","id":"lazy-value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Consider a simple search page. Enter value, hit enter, see results.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is simple test.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\nscenario(\u0027search by specific query\u0027) {\n    browser.open(\u0027/search\u0027)\n\n    $(\u0027#search-box\u0027).setValue(\u0027search this\u0027)\n    $(\u0027#search-box\u0027).sendKeys(\"\\n\")\n\n    $(\u0027#results .result\u0027).count.shouldBe \u003e 1\n}","type":"Snippet"},{"type":"Paragraph","content":[{"text":"In the example ","type":"SimpleText"},{"code":"$(\u0027#results .result\u0027).count","type":"InlinedCode"},{"text":" represents the number of elements matching the css selector.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Let\u0027s extract it.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static com.twosigma.webtau.WebTauGroovyDsl.*\n\ndef searchBox \u003d $(\u0027#search-box\u0027)\ndef numberOfResults \u003d searchBox.count\n\nscenario(\u0027search by specific query\u0027) {\n    browser.open(\u0027/search\u0027)\n\n    searchBox.setValue(\u0027search this\u0027)\n    searchBox.sendKeys(\"\\n\")\n\n    numberOfResults.shouldBe \u003e 1\n}","type":"Snippet"}]}],"lastModifiedTime":1533554070000,"tocItem":{"sectionTitle":"UI","pageTitle":"Page Element And Value","pageMeta":{},"fileName":"page-element-and-value","dirName":"UI","pageSectionIdTitles":[{"title":"Lazy Element","id":"lazy-element"},{"title":"Lazy Value","id":"lazy-value"}]}}]